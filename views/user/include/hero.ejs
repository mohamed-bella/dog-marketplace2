<section class="relative isolate overflow-hidden bg-white">
     <!-- Background decoration -->
     <div class="absolute inset-0">
          <!-- Gradient overlay -->
          <div class="absolute inset-0 bg-gradient-to-b from-blue-50 to-white"></div>

          <!-- Grid pattern -->
          <div class="absolute inset-0 [mask-image:linear-gradient(0deg,white,transparent)] bg-grid-pattern opacity-5"></div>

          <!-- Radial gradient blob -->
          <div class="absolute -top-96 left-1/2 -translate-x-1/2">
               <div class="aspect-square w-[800px] rounded-full bg-gradient-to-tr from-blue-400/20 via-blue-300/10 to-purple-300/5 blur-3xl"></div>
          </div>
     </div>

     <!-- Content container -->
     <div class="relative mx-auto max-w-7xl px-4 sm:px-6 lg:px-8" style="padding-top: 30px;">
          <div class="flex flex-col items-center text-center">
               <!-- Badge -->
               <div class="animate-in slide-in-from-bottom duration-700">
                    <span class="inline-flex items-center gap-1.5 px-3 py-1.5 rounded-lg text-sm font-medium bg-blue-50 text-blue-600">
                         <span class="relative flex h-2 w-2">
                              <span class="absolute inline-flex h-full w-full animate-ping rounded-full bg-blue-400 opacity-75"></span>
                              <span class="relative inline-flex h-2 w-2 rounded-full bg-blue-500"></span>
                         </span>
                         Le meilleur pour votre compagnon
                    </span>
               </div>

               <!-- Main heading -->
               <h1 class="mt-8 max-w-4xl text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl lg:text-7xl animate-in slide-in-from-bottom delay-150 duration-700">
                    Trouvez les meilleurs
                    <span class="relative whitespace-nowrap text-blue-600">
                         <svg aria-hidden="true" viewBox="0 0 418 42" class="absolute left-0 top-2/3 h-[0.58em] w-full fill-blue-200/50" preserveAspectRatio="none">
                              <path d="M203.371.916c-26.013-2.078-76.686 1.963-124.73 9.946L67.3 12.749C35.421 18.062 18.2 21.766 6.004 25.934 1.244 27.561.828 27.778.874 28.61c.07 1.214.828 1.121 9.595-1.176 9.072-2.377 17.15-3.92 39.246-7.496C123.565 7.986 157.869 4.492 195.942 5.046c7.461.108 19.25 1.696 19.17 2.582-.107 1.183-7.874 4.31-25.75 10.366-21.992 7.45-35.43 12.534-36.701 13.884-2.173 2.308-.202 4.407 4.442 4.734 2.654.187 3.263.157 15.593-.78 35.401-2.686 57.944-3.488 88.365-3.143 46.327.526 75.721 2.23 130.788 7.584 19.787 1.924 20.814 1.98 24.557 1.332l.066-.011c1.201-.203 1.53-1.825.399-2.335-2.911-1.31-4.893-1.604-22.048-3.261-57.509-5.556-87.871-7.36-132.059-7.842-23.239-.254-33.617-.116-50.627.674-11.629.54-42.371 2.494-46.696 2.967-2.359.259 8.133-3.625 26.504-9.81 23.239-7.825 27.934-10.149 28.304-14.005.417-4.348-3.529-6-16.878-7.066Z"></path>
                         </svg>
                         <span class="relative">services animaliers</span>
                    </span>
               </h1>
               <!-- Subtitle -->
               <p class="mt-6 max-w-2xl text-lg leading-8 text-gray-600 animate-in slide-in-from-bottom delay-300 duration-700">
                    Des professionnels qualifiés à votre service pour prendre soin de votre animal de compagnie
               </p>
               <!-- Search Form -->
               <div class="w-full max-w-3xl mt-10 animate-in slide-in-from-bottom delay-500 duration-700">
                    <form action="/search" method="GET" class="relative">
                         <div class="flex flex-col sm:flex-row gap-4">
                              <!-- Search Input -->
                              <div class="relative flex-1">
                                   <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                                        <i class="fas fa-search text-gray-400 text-lg"></i>
                                   </div>
                                   <input type="text" name="q" id="q" placeholder="Quel service recherchez-vous ?" class="w-full border-yellow-500 h-14 sm:h-16 pl-12 pr-4 text-lg rounded-2xl border-2  bg-white/80 backdrop-blur-sm
                                                     focus:bg-white focus:border-yellow-500 focus:ring-4 focus:ring-yellow-500/10
                                                     transition-all duration-300 outline-none" autocomplete="off">

                                   <!-- Quick Suggestions (Optional) -->
                                   <div class=" left-0 right-0 mt-2">
                                        <div class="flex flex-wrap gap-2 justify-center sm:justify-start">
                                             <% ['Dressage', 'Toilettage' , 'Promenade' ].forEach(suggestion=> { %>
                                                  <button type="button" onclick="document.querySelector('input[id=\'q\']').value='<%= suggestion %>'" class="text-sm px-3 py-1.5 rounded-full bg-gray-50 text-gray-600 hover:bg-gray-100 transition-colors">
                                                       <%= suggestion %>
                                                  </button>
                                                  <% }); %>
                                        </div>
                                   </div>
                              </div>

                              <!-- Search Button -->
                              <button type="submit" class="h-14 sm:h-16 px-8 sm:px-12 bg-yellow-600 hover:bg-yellow-700 text-white rounded-2xl
                                                  text-lg font-medium transition-all duration-200 hover:shadow-lg hover:-translate-y-0.5
                                                  flex items-center justify-center gap-2">
                                   <span>Rechercher</span>
                                   <i class="fas fa-arrow-right"></i>
                              </button>
                         </div>
                    </form>
               </div>
               <hr>
               <% const services=[ { id: 'dressage' , name: 'Dressage' , icon: 'dog' , bgColor: 'bg-blue-500' , textColor: 'text-white' , image: 'https://ndressilik.s3.eu-north-1.amazonaws.com/users/672166487944169b94e40563/gallery/1730309993918_d.png' , rating: 4.9, providers: 150 }, { id: 'toilettage' , name: 'Toilettage' , icon: 'cut' , bgColor: 'bg-purple-500' , textColor: 'text-white' , image: 'https://ndressilik.s3.eu-north-1.amazonaws.com/users/672166487944169b94e40563/gallery/1730309991467_toilettage.png' , rating: 4.8, providers: 120 }, { id: 'promenade' , name: 'Promenade' , icon: 'walking' , bgColor: 'bg-green-500' , textColor: 'text-white' , image: 'https://ndressilik.s3.eu-north-1.amazonaws.com/users/672166487944169b94e40563/gallery/1730309993933_p.png' , rating: 4.7, providers: 200 }, { id: 'veterinaire' , name: 'Vétérinaire' , icon: 'stethoscope' , bgColor: 'bg-red-500' , textColor: 'text-white' , image: 'https://ndressilik.s3.eu-north-1.amazonaws.com/users/672166487944169b94e40563/gallery/1730309991441_v.png' , rating: 4.9, providers: 80 }, { id: 'pension' , name: 'Pension' , icon: 'home' , bgColor: 'bg-yellow-500' , textColor: 'text-white' , image: 'https://ndressilik.s3.eu-north-1.amazonaws.com/users/672166487944169b94e40563/gallery/1730309989188_pension.png' , rating: 4.6, providers: 90 }, { id: 'transport' , name: 'Transport' , icon: 'car' , bgColor: 'bg-indigo-500' , textColor: 'text-white' , image: 'https://ndressilik.s3.eu-north-1.amazonaws.com/users/672166487944169b94e40563/gallery/1730309989456_t.png' , rating: 4.7, providers: 70 } ]; %>
                    <!-- Services Section  -->
                    <section class="w-full py-16 bg-gradient-to-b from-gray-50/50 to-white/50">
                         <div class="max-w-7xl mx-auto px-4">
                              <!-- Section Header -->
                              <div class="flex flex-col items-center text-center mb-16">
                                   <div class="relative py-8 left">
                                        <h2 class="text-4xl md:text-5xl lg:text-6xl font-extrabold text-gray-900 font-heading tracking-tight">
                                             Découvrez Nos Services
                                             <!-- Custom animated underline -->
                                             <div class="relative mt-2">
                                                  <div class="absolute inset-x-0 h-1 bg-gradient-to-r from-blue-600 via-purple-600 to-blue-600 rounded-full"></div>
                                                  <div class="absolute inset-x-0 h-1 bg-gradient-to-r from-blue-600 via-purple-600 to-blue-600 rounded-full animate-shimmer"></div>
                                             </div>
                                        </h2>
                                   </div>

                                   <style>
                                        /* Import modern font - Outfit is similar to many modern tech websites */
                                        @import url('https://fonts.googleapis.com/css2?family=Outfit:wght@400;600;800&display=swap');

                                        /* Custom font class */
                                        .font-heading {
                                             font-family: 'Outfit', sans-serif;
                                             letter-spacing: -0.02em;
                                        }

                                        /* Shimmer animation for underline */
                                        @keyframes shimmer {
                                             0% {
                                                  transform: translateX(-100%);
                                                  opacity: 0;
                                             }

                                             10% {
                                                  opacity: 0.5;
                                             }

                                             50% {
                                                  opacity: 1;
                                             }

                                             90% {
                                                  opacity: 0.5;
                                             }

                                             100% {
                                                  transform: translateX(100%);
                                                  opacity: 0;
                                             }
                                        }

                                        .animate-shimmer {
                                             animation: shimmer 3s ease-in-out infinite;
                                        }

                                        /* Responsive text adjustments */
                                        @media (max-width: 640px) {
                                             .text-4xl {
                                                  font-size: 2.5rem;
                                                  line-height: 1.1;
                                             }
                                        }

                                        @media (min-width: 641px) and (max-width: 1024px) {
                                             .md\:text-5xl {
                                                  font-size: 3rem;
                                                  line-height: 1.1;
                                             }
                                        }

                                        @media (min-width: 1025px) {
                                             .lg\:text-6xl {
                                                  font-size: 3.75rem;
                                                  line-height: 1.1;
                                             }
                                        }

                                        /* Optional: Add text shadow for better contrast */
                                        .font-heading {
                                             text-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);
                                        }

                                        /* Optional: Enhance hover effect */
                                        .font-heading:hover+.relative .absolute {
                                             animation-duration: 2s;
                                        }
                                   </style>

                              </div>

                              <!-- Desktop Grid with Creative Layout -->
                              <div class="hidden sm:grid grid-cols-6 grid-rows-2 gap-6 mb-8">
                                   <% services.forEach((service, index)=> { %>
                                        <a href="/services/<%= service.id %>" class="group relative <%= index === 0 ? 'col-span-3 row-span-2' : 'col-span-3' %> 
                                         transform transition-all duration-500 hover:-translate-y-1 hover:shadow-2xl" data-aos="fade-up" data-aos-delay="<%= index * 100 %>">
                                             <div class="h-full bg-white rounded-3xl overflow-hidden border border-gray-100">
                                                  <div class="flex <%= index === 0 ? 'flex-col' : 'h-full' %>">
                                                       <!-- Image Section -->
                                                       <div class="<%= index === 0 ? 'w-full aspect-[16/9]' : 'w-2/5 aspect-square' %> relative overflow-hidden">
                                                            <img src="<%= service.image %>" alt="<%= service.name %>" class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110" loading="lazy">
                                                            <!-- Gradient Overlay -->
                                                            <div class="absolute inset-0 bg-gradient-to-tr 
                                                           from-<%= service.bgColor.split('-')[1] %>-600/20 
                                                           to-transparent opacity-0 group-hover:opacity-100 
                                                           transition-opacity duration-500"></div>

                                                            <!-- Rating Badge -->
                                                            <div class="absolute top-4 right-4 px-3 py-1.5 rounded-full 
                                                           bg-white/95 backdrop-blur-sm flex items-center gap-2 
                                                           transform transition-transform duration-500 
                                                           group-hover:scale-110">
                                                                 <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                                                                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                                                                 </svg>
                                                                 <span class="font-semibold text-sm">
                                                                      <%= service.rating %>
                                                                 </span>
                                                            </div>
                                                       </div>

                                                       <!-- Content Section -->
                                                       <div class="<%= index === 0 ? 'w-full' : 'w-3/5' %> p-6 flex flex-col justify-between">
                                                            <div>
                                                                 <div class="flex items-center justify-between mb-4">
                                                                      <h3 class="text-lg font-bold text-gray-900">
                                                                           Service de <%= service.name %>
                                                                      </h3>
                                                                      <div class="flex h-12 w-12 items-center justify-center rounded-2xl
                                                                   bg-gradient-to-br from-<%= service.bgColor.split('-')[1] %>-50 
                                                                   to-<%= service.bgColor.split('-')[1] %>-100/50 
                                                                   group-hover:from-<%= service.bgColor.split('-')[1] %>-100 
                                                                   group-hover:to-<%= service.bgColor.split('-')[1] %>-200/50 
                                                                   transition-all duration-500">
                                                                           <i class="fas fa-<%= service.icon %> text-<%= service.bgColor.split('-')[1] %>-500 
                                                                     text-xl group-hover:scale-125 transition-transform duration-500"></i>
                                                                      </div>
                                                                 </div>

                                                            </div>

                                                            <div class="flex items-center justify-between">
                                                                 <span class="inline-flex items-center text-sm font-medium text-green-600">
                                                                      <i class="fas fa-check-circle mr-2"></i>
                                                                      Disponible 24/7
                                                                 </span>
                                                                 <div class="flex items-center gap-2 text-<%= service.bgColor.split('-')[1] %>-500 
                                                               group-hover:translate-x-2 transition-transform duration-500">
                                                                      <span class="text-sm font-medium">Découvrir</span>
                                                                      <i class="fas fa-arrow-right"></i>
                                                                 </div>
                                                            </div>
                                                       </div>
                                                  </div>
                                             </div>
                                        </a>
                                        <% }); %>
                              </div>

                              <!-- Mobile Slider -->
                              <div class="sm:hidden">
                                   <!-- Slider Header -->
                                   <div class="flex items-center justify-between mb-6">
                                        <span class="text-sm font-medium text-gray-500">Faites défiler pour voir plus</span>
                                        <div class="flex gap-2">
                                             <button id="prevBtn" class="p-2 rounded-xl bg-white border border-gray-200 text-gray-600 
                                                              disabled:opacity-50 disabled:cursor-not-allowed transform transition-transform 
                                                              active:scale-95">
                                                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                       <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                                                  </svg>
                                             </button>
                                             <button id="nextBtn" class="p-2 rounded-xl bg-white border border-gray-200 text-gray-600 
                                                              disabled:opacity-50 disabled:cursor-not-allowed transform transition-transform 
                                                              active:scale-95">
                                                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                       <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                                                  </svg>
                                             </button>
                                        </div>
                                   </div>

                                   <!-- Slider Track -->
                                   <div class="overflow-hidden">
                                        <div id="sliderTrack" class="flex gap-4 transition-transform duration-500 ease-out will-change-transform">
                                             <% services.forEach((service, index)=> { %>
                                                  <div class="flex-none w-[230px]" style="--index: <%= index %>;">
                                                       <div class="bg-white rounded-2xl shadow-sm overflow-hidden border border-gray-100 
                                                     transition-all duration-500 hover:shadow-xl" data-aos="fade-up" data-aos-delay="<%= index * 50 %>">
                                                            <!-- Card Content -->
                                                            <div class="aspect-[4/3] relative">
                                                                 <img src="<%= service.image %>" alt="<%= service.name %>" class="w-full h-full object-cover" loading="lazy">
                                                                 <!-- Animated Gradient Overlay -->
                                                                 <div class="absolute inset-0 bg-gradient-to-r 
                                                               from-<%= service.bgColor.split('-')[1] %>-500/20 
                                                               via-transparent to-<%= service.bgColor.split('-')[1] %>-500/20 
                                                               bg-[length:200%_100%] animate-shimmer"></div>

                                                            </div>

                                                            <!-- Content -->
                                                            <div class="p-4">
                                                                 <div class="flex items-center justify-between mb-3">
                                                                      <h3 class="text-base font-semibold text-gray-900">
                                                                           <%= service.name %>
                                                                      </h3>
                                                                      <div class="flex h-10 w-10 items-center justify-center rounded-xl 
                                                                   bg-<%= service.bgColor.split('-')[1] %>-50">
                                                                           <i class="fas fa-<%= service.icon %> text-<%= service.bgColor.split('-')[1] %>-500"></i>
                                                                      </div>
                                                                 </div>
                                                                 <div class="flex items-center justify-between">
                                                                      <span class="inline-flex items-center gap-1.5 text-sm text-gray-600">

                                                                      </span>
                                                                      <span class="inline-flex items-center text-xs text-green-600 font-medium">
                                                                           <i class="fas fa-check-circle mr-1"></i>
                                                                           Disponible
                                                                      </span>
                                                                 </div>
                                                            </div>
                                                       </div>
                                                  </div>
                                                  <% }); %>
                                        </div>
                                   </div>

                                   <!-- Progress Bar -->
                                   <div class="mt-6 h-1 bg-gray-100 rounded-full overflow-hidden">
                                        <div id="progressBar" class="h-full bg-blue-500 transition-all duration-500" style="width: 0%"></div>
                                   </div>
                              </div>
                         </div>
                    </section>

                    <style>
                         @keyframes shimmer {
                              0% {
                                   background-position: 200% 0;
                              }

                              100% {
                                   background-position: -200% 0;
                              }
                         }

                         .animate-shimmer {
                              animation: shimmer 8s linear infinite;
                         }

                         /* Card entrance animations */
                         @keyframes cardEntrance {
                              from {
                                   opacity: 0;
                                   transform: scale(0.9);
                              }

                              to {
                                   opacity: 1;
                                   transform: scale(1);
                              }
                         }

                         [data-aos="card-entrance"] {
                              transform-origin: center;
                              animation: cardEntrance 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
                         }

                         /* Smooth scrolling */
                         .smooth-scroll {
                              scroll-behavior: smooth;
                         }

                         @media (prefers-reduced-motion: reduce) {
                              .smooth-scroll {
                                   scroll-behavior: auto;
                              }

                              .animate-shimmer {
                                   animation: none;
                              }
                         }
                    </style>

                    <script>
                         document.addEventListener('DOMContentLoaded', function () {
                              const track = document.getElementById('sliderTrack');
                              const progressBar = document.getElementById('progressBar');
                              const nextBtn = document.getElementById('nextBtn');
                              const prevBtn = document.getElementById('prevBtn');
                              let currentIndex = 0;
                              const slideWidth = 296; // 280px card + 16px gap
                              let startX = 0;
                              let isDragging = false;
                              let currentTranslate = 0;
                              let previousTranslate = 0;

                              function updateSlider(animate = true) {
                                   const maxTranslate = -(track.children.length - 1) * slideWidth;
                                   currentTranslate = Math.max(Math.min(currentTranslate, 0), maxTranslate);

                                   if (animate) {
                                        track.style.transition = 'transform 0.5s cubic-bezier(0.4, 0, 0.2, 1)';
                                   } else {
                                        track.style.transition = 'none';
                                   }

                                   track.style.transform = `translateX(${currentTranslate}px)`;

                                   // Update progress bar
                                   const progress = (Math.abs(currentTranslate) / Math.abs(maxTranslate)) * 100;
                                   progressBar.style.width = `${progress}%`;

                                   // Update buttons
                                   prevBtn.disabled = currentTranslate >= 0;
                                   nextBtn.disabled = currentTranslate <= maxTranslate;

                                   if (animate) {
                                        setTimeout(() => {
                                             track.style.transition = 'none';
                                        }, 500);
                                   }
                              }

                              // Touch events
                              track.addEventListener('touchstart', (e) => {
                                   isDragging = true;
                                   startX = e.touches[0].clientX;
                                   previousTranslate = currentTranslate;
                                   track.style.transition = 'none';
                              });

                              // Continue from previous touchmove event
                              track.addEventListener('touchmove', (e) => {
                                   if (!isDragging) return;
                                   const currentX = e.touches[0].clientX;
                                   const diff = currentX - startX;
                                   currentTranslate = previousTranslate + diff;
                                   updateSlider(false);
                              });

                              track.addEventListener('touchend', () => {
                                   isDragging = false;
                                   const moveBy = 20; // Minimum movement to trigger slide

                                   // Calculate the closest slide position
                                   const slideMove = Math.round(currentTranslate / slideWidth) * slideWidth;
                                   currentTranslate = slideMove;

                                   updateSlider(true);
                              });

                              // Button controls
                              nextBtn?.addEventListener('click', () => {
                                   currentTranslate -= slideWidth;
                                   updateSlider(true);
                                   animateSlideButton(nextBtn);
                              });

                              prevBtn?.addEventListener('click', () => {
                                   currentTranslate += slideWidth;
                                   updateSlider(true);
                                   animateSlideButton(prevBtn);
                              });

                              // Button press animation
                              function animateSlideButton(button) {
                                   button.classList.add('scale-95', 'bg-gray-50');
                                   setTimeout(() => {
                                        button.classList.remove('scale-95', 'bg-gray-50');
                                   }, 200);
                              }

                              // Card entrance animations
                              function animateCards() {
                                   const cards = track.children;
                                   Array.from(cards).forEach((card, index) => {
                                        card.style.opacity = '0';
                                        card.style.transform = 'translateY(20px)';

                                        setTimeout(() => {
                                             card.style.transition = 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)';
                                             card.style.opacity = '1';
                                             card.style.transform = 'translateY(0)';
                                        }, index * 100);
                                   });
                              }

                              // Initialize
                              updateSlider(false);
                              animateCards();

                              // Add smooth momentum scrolling
                              let velocity = 0;
                              let rafId = null;

                              function momentumScroll() {
                                   if (Math.abs(velocity) > 0.1) {
                                        currentTranslate += velocity;
                                        velocity *= 0.95; // Decay factor
                                        updateSlider(false);
                                        rafId = requestAnimationFrame(momentumScroll);
                                   } else {
                                        cancelAnimationFrame(rafId);
                                        // Snap to nearest slide
                                        const slideMove = Math.round(currentTranslate / slideWidth) * slideWidth;
                                        currentTranslate = slideMove;
                                        updateSlider(true);
                                   }
                              }

                              // Add MouseWheel support for desktop testing
                              track.addEventListener('wheel', (e) => {
                                   e.preventDefault();
                                   const delta = e.deltaX;
                                   velocity = delta * 0.1;

                                   if (rafId === null) {
                                        rafId = requestAnimationFrame(momentumScroll);
                                   }
                              }, { passive: false });

                              // Handle window resize
                              let resizeTimeout;
                              window.addEventListener('resize', () => {
                                   clearTimeout(resizeTimeout);
                                   resizeTimeout = setTimeout(() => {
                                        // Recalculate dimensions and update slider
                                        updateSlider(false);
                                   }, 250);
                              });

                              // Add keyboard navigation
                              document.addEventListener('keydown', (e) => {
                                   if (e.key === 'ArrowLeft') {
                                        prevBtn.click();
                                   } else if (e.key === 'ArrowRight') {
                                        nextBtn.click();
                                   }
                              });

                              // Add swipe detection
                              let xDown = null;
                              let yDown = null;

                              function getTouches(evt) {
                                   return evt.touches || evt.originalEvent.touches;
                              }

                              track.addEventListener('touchstart', (evt) => {
                                   const firstTouch = getTouches(evt)[0];
                                   xDown = firstTouch.clientX;
                                   yDown = firstTouch.clientY;
                              });

                              track.addEventListener('touchmove', (evt) => {
                                   if (!xDown || !yDown) return;

                                   const xUp = evt.touches[0].clientX;
                                   const yUp = evt.touches[0].clientY;
                                   const xDiff = xDown - xUp;
                                   const yDiff = yDown - yUp;

                                   if (Math.abs(xDiff) > Math.abs(yDiff)) {
                                        if (xDiff > 0) {
                                             nextBtn.click();
                                        } else {
                                             prevBtn.click();
                                        }
                                   }

                                   xDown = null;
                                   yDown = null;
                              });

                              // Intersection Observer for lazy loading
                              const options = {
                                   root: null,
                                   rootMargin: '50px',
                                   threshold: 0.1
                              };

                              const observer = new IntersectionObserver((entries) => {
                                   entries.forEach(entry => {
                                        if (entry.isIntersecting) {
                                             const img = entry.target.querySelector('img');
                                             if (img && img.dataset.src) {
                                                  img.src = img.dataset.src;
                                                  img.removeAttribute('data-src');
                                             }
                                             observer.unobserve(entry.target);
                                        }
                                   });
                              }, options);

                              // Observe all slide cards
                              track.querySelectorAll('.flex-none').forEach(card => {
                                   observer.observe(card);
                              });
                         });
                    </script>



          </div>
     </div>
</section>

<style>
     /* Grid pattern background */
     .bg-grid-pattern {
          background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M54.627 0l.83.828-1.415 1.415L51.8 0h2.827zM5.373 0l-.83.828L5.96 2.243 8.2 0H5.374zM48.97 0l3.657 3.657-1.414 1.414L46.143 0h2.828zM11.03 0L7.372 3.657 8.787 5.07 13.857 0H11.03zm32.284 0L49.8 6.485 48.384 7.9l-7.9-7.9h2.83zM16.686 0L10.2 6.485 11.616 7.9l7.9-7.9h-2.83zM22.344 0L13.858 8.485 15.272 9.9l7.9-7.9h-.828zm5.656 0L19.515 8.485 20.93 9.9l7.9-7.9h-0.828zm5.656 0L25.172 8.485 26.586 9.9l7.9-7.9h-0.828zm5.656 0L30.828 8.485 32.242 9.9l7.9-7.9h-0.828zm5.656 0L36.485 8.485 37.9 9.9l7.9-7.9h-0.828zm5.656 0L42.142 8.485 43.556 9.9l7.9-7.9h-0.828zm5.656 0L47.8 8.485 49.214 9.9l7.9-7.9h-0.828zm5.656 0L53.456 8.485 54.87 9.9l7.9-7.9h-0.828zM1.414 0L0 1.414l.828.83L2.244 0h-.83zm5.656 0L5.656 1.414l.828.83L8.9 0H7.07zm5.656 0L11.313 1.414l.828.83L14.557 0h-.83zm5.656 0L16.97 1.414l.828.83L20.213 0h-.83zm5.656 0L22.626 1.414l.828.83L25.87 0h-.83zm5.656 0L28.283 1.414l.828.83L31.526 0h-.83zm5.656 0L33.94 1.414l.828.83L37.182 0h-.83zm.828 0h-.83A5.082 5.082 0 0 1 49.8 13.858L60 3.656V0h-5.656zM0 5.656V0h5.656L0 5.656zm0 5.656V5.656L5.656 0h5.656L0 11.313zm0 5.656V11.313L11.313 0h5.656L0 16.97zm0 5.656V16.97L16.97 0h5.656L0 22.626zm0 5.656V22.626L22.626 0h5.656L0 28.283zm0 5.656V28.283L28.283 0h5.656L0 33.94zm0 5.656V33.94L33.94 0h5.656L0 39.596zm0 5.656V39.596L39.596 0h5.656L0 45.253zm0 5.656V45.253L45.253 0h5.656L0 50.91zm0 5.656V50.91L50.91 0h5.656L0 56.566zm0 5.656V56.566L56.566 0H60L0 60z' fill='%23f0f9ff' fill-opacity='1' fill-rule='evenodd'/%3E%3C/svg%3E");
     }

     /* Animations */
     @keyframes animate-in {
          from {
               opacity: 0;
               transform: translateY(20px);
          }

          to {
               opacity: 1;
               transform: translateY(0);
          }
     }

     .animate-in {
          animation: animate-in 0.6s ease-out forwards;
          opacity: 0;
     }

     .slide-in-from-bottom {
          --animate-y: 2rem;
          transform: translateY(var(--animate-y));
     }

     .delay-150 {
          animation-delay: 150ms;
     }

     .delay-300 {
          animation-delay: 300ms;
     }

     .delay-500 {
          animation-delay: 500ms;
     }

     .duration-700 {
          animation-duration: 700ms;
     }

     /* Ensure smooth animations */
     @media (prefers-reduced-motion: reduce) {
          .animate-in {
               animation: none;
               opacity: 1;
               transform: translateY(0);
          }
     }
</style>