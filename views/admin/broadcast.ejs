<!-- broadcast.ejs -->
<%- include('includes/head') %>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

<div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="bg-white rounded-lg shadow-lg p-6">
            <!-- Header -->
            <div class="border-b border-gray-200 pb-4 mb-6">
                <h1 class="text-3xl font-bold text-gray-900">Email Broadcast</h1>
                <p class="mt-2 text-gray-600">Send personalized emails to your users</p>
            </div>

            <!-- Main Form -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <!-- Left Column - Email Content -->
                <div class="space-y-6">
                    <!-- Template Selection -->
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Email Template</label>
                        <select id="template-select" class="w-full rounded-md border border-gray-300 shadow-sm p-2 focus:ring-indigo-500 focus:border-indigo-500">
                            <option value="">Custom Email</option>
                            <% Object.entries(templates).forEach(([key, template]) => { %>
                                <option value="<%= key %>"><%= template.name %></option>
                            <% }); %>
                        </select>
                    </div>

                    <!-- Subject Field -->
                    <div>
                        <label for="subject" class="block text-sm font-medium text-gray-700 mb-2">Subject</label>
                        <input type="text" id="subject" class="w-full rounded-md border border-gray-300 shadow-sm p-2 focus:ring-indigo-500 focus:border-indigo-500" required>
                    </div>

                    <!-- Message Field -->
                    <div>
                        <label for="message" class="block text-sm font-medium text-gray-700 mb-2">Message</label>
                        <div class="relative">
                            <textarea id="message" rows="8" class="w-full rounded-md border border-gray-300 shadow-sm p-2 focus:ring-indigo-500 focus:border-indigo-500"></textarea>
                            <div id="template-variables" class="hidden absolute top-2 right-2 bg-gray-100 rounded-md p-2">
                                <p class="text-xs text-gray-600 mb-1">Available Variables:</p>
                                <div class="space-y-1">
                                    <span class="inline-block bg-gray-200 rounded px-2 py-1 text-xs cursor-pointer hover:bg-gray-300">{{name}}</span>
                                    <span class="inline-block bg-gray-200 rounded px-2 py-1 text-xs cursor-pointer hover:bg-gray-300">{{month}}</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Preview Button -->
                    <button id="preview-button" class="w-full bg-indigo-100 text-indigo-700 px-4 py-2 rounded-md hover:bg-indigo-200 transition-colors">
                        Preview Email
                    </button>
                </div>

                <!-- Right Column - User Selection -->
                <div class="space-y-6">
                    <!-- Search and Filter -->
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Search Users</label>
                        <input type="text" id="user-search" class="w-full rounded-md border border-gray-300 shadow-sm p-2 focus:ring-indigo-500 focus:border-indigo-500" placeholder="Search by email or name...">
                    </div>

                    <!-- User Selection -->
                    <div>
                        <div class="flex items-center justify-between mb-2">
                            <label class="block text-sm font-medium text-gray-700">Recipients</label>
                            <div class="flex items-center space-x-2">
                                <button id="select-all" class="text-sm text-indigo-600 hover:text-indigo-800">Select All</button>
                                <button id="deselect-all" class="text-sm text-gray-600 hover:text-gray-800">Deselect All</button>
                            </div>
                        </div>
                        <div id="users-list" class="border border-gray-200 rounded-md h-96 overflow-y-auto">
                            <div class="divide-y divide-gray-200">
                                <% users.forEach(user => { %>
                                    <div class="user-item p-3 hover:bg-gray-50">
                                        <div class="flex items-center">
                                            <input type="checkbox" class="user-checkbox h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded"
                                                value="<%= user.email %>"
                                                id="user-<%= user._id %>"
                                                data-name="<%= user.displayName%>">
                                            <label for="user-<%= user._id %>" class="ml-3">
                                                <div class="text-sm font-medium text-gray-700"><%= user.displayName || 'Unnamed User' %></div>
                                                <div class="text-sm text-gray-500"><%= user.email %></div>
                                            </label>
                                        </div>
                                    </div>
                                <% }); %>
                            </div>
                        </div>
                        <div class="mt-2 text-sm text-gray-500">
                            Selected: <span id="selected-count">0</span> users
                        </div>
                    </div>
                </div>
            </div>

            <!-- Send Button and Status -->
            <div class="mt-6 border-t border-gray-200 pt-6">
                <div class="flex items-center justify-between">
                    <button id="send-button" class="bg-indigo-600 text-white px-6 py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2" disabled>
                        <span id="button-text">Send Broadcast</span>
                        <svg id="loading-spinner" class="animate-spin h-5 w-5 hidden" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8H4z"></path>
                        </svg>
                    </button>
                    <div id="email-progress" class="hidden">
                        <div class="text-sm text-gray-600">
                            Progress: <span id="progress-count">0</span>/<span id="total-count">0</span>
                        </div>
                        <div class="w-64 h-2 bg-gray-200 rounded-full mt-1">
                            <div id="progress-bar" class="h-2 bg-indigo-600 rounded-full" style="width: 0%"></div>
                        </div>
                    </div>
                </div>
                <div id="status-messages" class="mt-4 space-y-2"></div>
            </div>

            <!-- Email Preview Modal -->
            <div id="preview-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center">
                <div class="bg-white rounded-lg max-w-2xl w-full mx-4 p-6">
                    <div class="flex justify-between items-center mb-4">
                        <h3 class="text-lg font-medium">Email Preview</h3>
                        <button id="close-preview" class="text-gray-400 hover:text-gray-500">
                            <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </button>
                    </div>
                    <div class="border rounded-md p-4 mb-4">
                        <div class="text-sm text-gray-500 mb-2">Subject:</div>
                        <div id="preview-subject" class="font-medium"></div>
                        <div class="text-sm text-gray-500 mt-4 mb-2">Message:</div>
                        <div id="preview-message" class="whitespace-pre-wrap"></div>
                    </div>
                    <div class="flex justify-end">
                        <button id="close-preview-button" class="bg-gray-100 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-200">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
$(document).ready(function() {
    let selectedTemplate = '';
    
    // Template selection handling
    $('#template-select').change(function() {
        selectedTemplate = $(this).val();
        if (selectedTemplate) {
            const template = <%- JSON.stringify(templates) %>[selectedTemplate];
            $('#subject').val(template.subject);
            $('#message').val(template.content);
            $('#template-variables').removeClass('hidden');
        } else {
            $('#template-variables').addClass('hidden');
        }
    });

    // User search functionality
    $('#user-search').on('input', function() {
        const searchTerm = $(this).val().toLowerCase();
        $('.user-item').each(function() {
            const email = $(this).find('.user-checkbox').val().toLowerCase();
            const name = $(this).find('.text-gray-700').text().toLowerCase();
            $(this).toggle(email.includes(searchTerm) || name.includes(searchTerm));
        });
    });

    // Select/Deselect all functionality
    $('#select-all').click(function() {
        $('.user-checkbox:visible').prop('checked', true);
        updateSelectedCount();
        checkFormValidity();
    });

    $('#deselect-all').click(function() {
        $('.user-checkbox').prop('checked', false);
        updateSelectedCount();
        checkFormValidity();
    });

    // Update selected count
    function updateSelectedCount() {
        const count = $('.user-checkbox:checked').length;
        $('#selected-count').text(count);
    }

    $('.user-checkbox').change(function() {
        updateSelectedCount();
        checkFormValidity();
    });

    // Form validation
    function checkFormValidity() {
        const subject = $('#subject').val().trim();
        const message = $('#message').val().trim();
        const anyUserSelected = $('.user-checkbox:checked').length > 0;
        $('#send-button').prop('disabled', !(subject && message && anyUserSelected));
    }

    $('#subject, #message').on('input', checkFormValidity);

    // Preview functionality
    $('#preview-button').click(function() {
        const subject = $('#subject').val();
        const message = $('#message').val();
        
        $('#preview-subject').text(subject);
        $('#preview-message').text(message);
        $('#preview-modal').removeClass('hidden').addClass('flex');
    });

    $('#close-preview, #close-preview-button').click(function() {
        $('#preview-modal').removeClass('flex').addClass('hidden');
    });

 
    // Send emails
    $('#send-button').click(function() {
        const subject = $('#subject').val().trim();
        const message = $('#message').val().trim();
        const template = $('#template-select').val();
        const selectedUsers = $('.user-checkbox:checked').map(function() {
            return {
                email: $(this).val(),
                name: $(this).data('name')
            };
        }).get();

        if (!subject || !message || selectedUsers.length === 0) {
            showStatus('Please fill in all fields and select at least one user.', 'error');
            return;
        }

        // Initialize progress tracking
        const totalEmails = selectedUsers.length;
        $('#total-count').text(totalEmails);
        $('#progress-count').text('0');
        $('#progress-bar').css('width', '0%');
        $('#email-progress').removeClass('hidden');
        
        // Disable form while sending
        disableForm(true);
        
        // Clear previous status messages
        $('#status-messages').empty();
        
        // Send emails
        sendEmails(selectedUsers, subject, message, template);
    });

    function disableForm(disabled) {
        $('#send-button').prop('disabled', disabled);
        $('#template-select').prop('disabled', disabled);
        $('#subject').prop('disabled', disabled);
        $('#message').prop('disabled', disabled);
        $('.user-checkbox').prop('disabled', disabled);
        
        if (disabled) {
            $('#loading-spinner').removeClass('hidden');
            $('#button-text').text('Sending...');
        } else {
            $('#loading-spinner').addClass('hidden');
            $('#button-text').text('Send Broadcast');
        }
    }

    function showStatus(message, type = 'success') {
        const statusClass = type === 'success' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800';
        const statusHtml = `
            <div class="p-4 rounded-md ${statusClass} flex items-center justify-between">
                <div class="flex items-center">
                    <svg class="h-5 w-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        ${type === 'success' 
                            ? '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>'
                            : '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>'}
                    </svg>
                    <span>${message}</span>
                </div>
                <button class="text-sm underline" onclick="this.parentElement.remove()">Dismiss</button>
            </div>
        `;
        $('#status-messages').prepend(statusHtml);
    }

    function updateProgress(current, total) {
        const percentage = (current / total) * 100;
        $('#progress-count').text(current);
        $('#progress-bar').css('width', `${percentage}%`);
    }

    async function sendEmails(users, subject, message, template) {
        let successCount = 0;
        let failureCount = 0;

        for (let i = 0; i < users.length; i++) {
            const user = users[i];
            try {
                const response = await $.ajax({
                    url: '/admin/send-email',
                    method: 'POST',
                    data: {
                        email: user.email,
                        subject: subject,
                        message: message,
                        template: template,
                        customFields: {
                            name: user.name || 'Valued Customer',
                            month: new Date().toLocaleString('default', { month: 'long' })
                        }
                    }
                });

                if (response.success) {
                    successCount++;
                    showStatus(`Email sent successfully to ${user.email}`, 'success');
                } else {
                    failureCount++;
                    showStatus(`Failed to send email to ${user.email}: ${response.message}`, 'error');
                }
            } catch (error) {
                failureCount++;
                showStatus(`Error sending email to ${user.email}: ${error.responseJSON?.message || 'Unknown error'}`, 'error');
            }

            updateProgress(i + 1, users.length);
            
            // Add a small delay between emails to prevent overwhelming the server
            await new Promise(resolve => setTimeout(resolve, 500));
        }

        // Show final status
        const finalMessage = `Completed: ${successCount} sent successfully, ${failureCount} failed`;
        showStatus(finalMessage, failureCount === 0 ? 'success' : 'error');
        
        // Reset form
        disableForm(false);
        if (successCount === users.length) {
            resetForm();
        }
    }

    function resetForm() {
        $('#template-select').val('');
        $('#subject').val('');
        $('#message').val('');
        $('.user-checkbox').prop('checked', false);
        updateSelectedCount();
        $('#email-progress').addClass('hidden');
        $('#template-variables').addClass('hidden');
    }

    // Template variable insertion
    $('#template-variables span').click(function() {
        const variable = $(this).text();
        const messageField = $('#message')[0];
        const start = messageField.selectionStart;
        const end = messageField.selectionEnd;
        const text = messageField.value;
        const before = text.substring(0, start);
        const after = text.substring(end);
        
        messageField.value = before + variable + after;
        messageField.selectionStart = messageField.selectionEnd = start + variable.length;
        messageField.focus();
    });

    // Initialize tooltips for template variables
    $('.template-variable').hover(
        function() {
            const description = $(this).data('description');
            $(this).append(`<div class="tooltip">${description}</div>`);
        },
        function() {
            $(this).find('.tooltip').remove();
        }
    );

    // Handle escape key for modal
    $(document).keydown(function(e) {
        if (e.key === 'Escape' && !$('#preview-modal').hasClass('hidden')) {
            $('#preview-modal').removeClass('flex').addClass('hidden');
        }
    });

    // Click outside modal to close
    $('#preview-modal').click(function(e) {
        if (e.target === this) {
            $(this).removeClass('flex').addClass('hidden');
        }
    });
});
</script>