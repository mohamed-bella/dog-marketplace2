<!-- services.ejs -->
<div class="w-full bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden" id="services">
    <!-- Header Section -->
    <div class="p-6 border-b border-gray-200">
        <div class="flex flex-col gap-6">
            <!-- Title and Actions Row -->
            <div class="flex flex-col sm:flex-row sm:items-center justify-between gap-4">
                <div>
                    <h2 class="text-xl font-semibold text-gray-900 flex items-center gap-3">
                        Vos Services
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-sm font-medium bg-indigo-50 text-indigo-600">
                            <%= services.length %> service<%= services.length > 1 ? 's' : '' %>
                        </span>
                    </h2>
                    <p class="mt-1 text-sm text-gray-500">Gérez et suivez vos services en temps réel</p>
                </div>
                
                <a href="/dashboard/new-service" 
                   class="inline-flex items-center justify-center gap-2 px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors">
                    <i class="fas fa-plus text-sm"></i>
                    <span>Nouveau service</span>
                </a>
            </div>

            <!-- Search and Filter Row -->
            <div class="flex flex-col sm:flex-row gap-4">
                <!-- Search -->
                <div class="relative flex-1">
                    <input type="text" 
                           id="searchInput" 
                           placeholder="Rechercher un service..." 
                           class="w-full px-4 py-2 pl-10 bg-gray-50 border border-gray-200 rounded-lg focus:bg-white focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500/20 transition-all">
                    <i class="fas fa-search absolute left-3 top-1/2 -translate-y-1/2 text-gray-400"></i>
                </div>

                <!-- Filters -->
                <div class="flex gap-2">
                    <select class="px-4 py-2 bg-gray-50 border border-gray-200 rounded-lg focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500/20 transition-all">
                        <option value="">Tous les types</option>
                        <option value="boarding">Pension</option>
                        <option value="grooming">Toilettage</option>
                        <option value="training">Dressage</option>
                    </select>
                    <select class="px-4 py-2 bg-gray-50 border border-gray-200 rounded-lg focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500/20 transition-all">
                        <option value="">Tous les statuts</option>
                        <option value="active">Actif</option>
                        <option value="inactive">Inactif</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <!-- Table View (Desktop) -->
    <div class="hidden lg:block overflow-x-auto">
        <table class="w-full">
            <thead>
                <tr class="bg-gray-50 text-left">
                    <th class="px-6 py-4 text-xs font-medium text-gray-500">Service</th>
                    <th class="px-6 py-4 text-xs font-medium text-gray-500">Type</th>
                    <th class="px-6 py-4 text-xs font-medium text-gray-500">Tarif</th>
                    <th class="px-6 py-4 text-xs font-medium text-gray-500">Statut</th>
                    <th class="px-6 py-4 text-xs font-medium text-gray-500">Vues</th>
                    <th class="px-6 py-4 text-xs font-medium text-gray-500">Actions</th>
                </tr>
            </thead>
            <tbody class="divide-y divide-gray-100">
                <% if (services && services.length > 0) { %>
                    <% services.forEach(service => { %>
                        <tr class="group hover:bg-gray-50 transition-all">
                            <!-- Service Info -->
                            <td class="px-6 py-4">
                                <div class="flex items-center gap-4">
                                    <div class="relative w-12 h-12 rounded-lg overflow-hidden bg-gray-100">
                                        <img src="<%= service.images[0] %>" 
                                             alt="<%= service.serviceName %>"
                                             class="w-full h-full object-cover">
                                    </div>
                                    <div>
                                        <div class="font-medium text-gray-900"><%= service.serviceName %></div>
                                        <div class="text-sm text-gray-500"><%= service.location %></div>
                                    </div>
                                </div>
                            </td>

                            <!-- Type -->
                            <td class="px-6 py-4">
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-50 text-indigo-600">
                                    <%= service.serviceOptions %>
                                </span>
                            </td>

                            <!-- Price -->
                            <td class="px-6 py-4">
                                <div class="text-sm font-medium text-gray-900">
                                    <%= service.priceRange %> DH
                                </div>
                            </td>

                            <!-- Status Toggle -->
                            <td class="px-6 py-4">
                                <label class="relative inline-flex items-center cursor-pointer">
                                    <input type="checkbox" 
                                           class="sr-only peer" 
                                           onchange="toggleServiceStatus('<%= service._id %>', '<%= service.status %>')"
                                           <%= service.status === 'active' ? 'checked' : '' %>>
                                    <div class="w-11 h-6 bg-gray-200 rounded-full peer peer-checked:bg-indigo-600 
                                                peer-focus:ring-4 peer-focus:ring-indigo-300
                                                after:content-[''] after:absolute after:top-[2px] after:left-[2px]
                                                after:bg-white after:rounded-full after:h-5 after:w-5
                                                after:transition-all peer-checked:after:translate-x-full">
                                    </div>
                                </label>
                            </td>

                            <!-- Views -->
                            <td class="px-6 py-4">
                                <div class="flex items-center gap-1.5">
                                    <i class="fas fa-eye text-gray-400"></i>
                                    <span class="text-sm text-gray-600"><%= service.views || 0 %></span>
                                </div>
                            </td>

                            <!-- Actions -->
                            <td class="px-6 py-4">
                                <div class="flex items-center gap-2 opacity-0 group-hover:opacity-100 transition-opacity">
                                    <button onclick="window.location.href='/service/<%= service._id %>'"
                                            class="p-2 text-gray-600 hover:text-indigo-600 hover:bg-indigo-50 rounded-lg transition-all"
                                            title="Voir">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button onclick="window.location.href='/dashboard/services/<%= service._id %>/edit'"
                                            class="p-2 text-gray-600 hover:text-emerald-600 hover:bg-emerald-50 rounded-lg transition-all"
                                            title="Modifier">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button onclick="confirmDelete('<%= service._id %>')"
                                            class="p-2 text-gray-600 hover:text-red-600 hover:bg-red-50 rounded-lg transition-all"
                                            title="Supprimer">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <% }); %>
                <% } %>
            </tbody>
        </table>
    </div>

    <!-- Grid View (Mobile) -->
    <div class="lg:hidden">
        <div class="divide-y divide-gray-100">
            <% if (services && services.length > 0) { %>
                <% services.forEach(service => { %>
                    <div class="p-4 space-y-4">
                        <!-- Service Header -->
                        <div class="flex items-start gap-4">
                            <div class="relative w-20 h-20 rounded-lg overflow-hidden bg-gray-100 flex-shrink-0">
                                <img src="<%= service.images[0] %>" 
                                     alt="<%= service.serviceName %>"
                                     class="w-full h-full object-cover">
                            </div>
                            <div class="flex-1 min-w-0">
                                <div class="flex items-center justify-between gap-4">
                                    <h3 class="text-base font-medium text-gray-900 truncate">
                                        <%= service.serviceName %>
                                    </h3>
                                    <label class="relative inline-flex items-center cursor-pointer">
                                        <input type="checkbox" 
                                               class="sr-only peer" 
                                               onchange="toggleServiceStatus('<%= service._id %>', '<%= service.status %>')"
                                               <%= service.status === 'active' ? 'checked' : '' %>>
                                        <div class="w-9 h-5 bg-gray-200 rounded-full peer peer-checked:bg-indigo-600 
                                                    after:content-[''] after:absolute after:top-[2px] after:left-[2px]
                                                    after:bg-white after:rounded-full after:h-4 after:w-4
                                                    after:transition-all peer-checked:after:translate-x-full">
                                        </div>
                                    </label>
                                </div>
                                <div class="mt-1 flex items-center gap-2 text-sm text-gray-500">
                                    <i class="fas fa-map-marker-alt"></i>
                                    <span class="truncate"><%= service.location %></span>
                                </div>
                                <div class="mt-2 flex items-center gap-3">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-50 text-indigo-600">
                                        <%= service.serviceOptions %>
                                    </span>
                                    <span class="inline-flex items-center gap-1 text-sm text-gray-500">
                                        <i class="fas fa-eye"></i>
                                        <%= service.views || 0 %>
                                    </span>
                                </div>
                            </div>
                        </div>

                        <!-- Mobile Actions -->
                        <div class="flex items-center justify-between pt-3 border-t border-gray-100">
                            <div class="text-sm font-medium text-gray-900">
                                <%= service.priceRange %> DH
                            </div>
                            <div class="flex items-center gap-3">
                                <button onclick="window.location.href='/service/<%= service._id %>'"
                                        class="text-gray-600">
                                    <i class="fas fa-eye"></i>
                                </button>
                                <button onclick="window.location.href='/dashboard/services/<%= service._id %>/edit'"
                                        class="text-gray-600">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button onclick="confirmDelete('<%= service._id %>')"
                                        class="text-gray-600">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                <% }); %>
            <% } %>
        </div>
    </div>

    <!-- Empty State -->
    <% if (!services || services.length === 0) { %>
        <div class="py-12 text-center">
            <div class="w-16 h-16 bg-indigo-50 rounded-full mx-auto mb-4 flex items-center justify-center">
                <i class="fas fa-box-open text-2xl text-indigo-600"></i>
            </div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">
                Aucun service pour le moment
            </h3>
            <p class="text-gray-500 mb-6">
                Commencez par ajouter votre premier service
            </p>
            <a href="/dashboard/new-service" 
               class="inline-flex items-center justify-center gap-2 px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors">
                <i class="fas fa-plus text-sm"></i>
                <span>Ajouter un service</span>
            </a>
        </div>
    <% } %>
</div>

<script>
// Search and Filter functionality
function debounce(func, wait) {
    let timeout;
    return function(...args) {
        clearTimeout(timeout);
        timeout = setTimeout(() => func.apply(this, args), wait);
    };
}

const searchInput = document.getElementById('searchInput');
const handleSearch = debounce(function(e) {
    const searchText = e.target.value.toLowerCase();
    const isMobile = window.innerWidth < 1024;
    
    const elements = isMobile ? 
        document.querySelectorAll('.lg\\:hidden .p-4') :
        document.querySelectorAll('tbody tr');
    
    elements.forEach(element => {
        const serviceName = isMobile ?
            element.querySelector('h3').textContent.toLowerCase() :
            element.querySelector('.font-medium').textContent.toLowerCase();
            
        if (serviceName.includes(searchText)) {
            element.style.display = '';
            element.style.opacity = '1';
        } else {
            element.style.display = 'none';
            element.style.opacity = '0';
        }
    });
}, 300);

searchInput.addEventListener('input', handleSearch);

// Service Status Toggle
async function toggleServiceStatus(serviceId, currentStatus) {
    try {
        const response = await fetch(`/dashboard/services/${serviceId}/toggle-status`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                status: currentStatus === 'active' ? 'inactive' : 'active'
            })
        });
        if (!response.ok) throw new Error('Failed to update status');
        
        showToast('Statut mis à jour avec succès', 'success');
        setTimeout(() => window.location.reload(), 1500);
    } catch (error) {
        console.error('Error:', error);
        showToast('Une erreur est survenue', 'error');
    }
}

// Delete Service Confirmation
function confirmDelete(serviceId) {
    Swal.fire({
        title: 'Supprimer ce service ?',
        text: 'Cette action ne peut pas être annulée',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#dc2626',
        cancelButtonColor: '#6b7280',
        confirmButtonText: 'Oui, supprimer',
        cancelButtonText: 'Annuler',
        showLoaderOnConfirm: true,
        preConfirm: async () => {
            try {
                const response = await fetch(`/dashboard/services/${serviceId}/delete`, {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' }
                });
                
                if (!response.ok) {
                    throw new Error('Failed to delete service');
                }
                
                return response.json();
            } catch (error) {
                Swal.showValidationMessage(
                    `Erreur: ${error.message || 'Une erreur est survenue'}`
                );
            }
        },
        allowOutsideClick: () => !Swal.isLoading()
    }).then((result) => {
        if (result.isConfirmed) {
            showToast('Service supprimé avec succès', 'success');
            
            // Animate removal and reload
            const serviceElement = document.querySelector(`[data-service-id="${serviceId}"]`);
            if (serviceElement) {
                serviceElement.style.opacity = '0';
                serviceElement.style.transform = 'translateX(-20px)';
                setTimeout(() => {
                    window.location.reload();
                }, 300);
            } else {
                window.location.reload();
            }
        }
    });
}

// Toast Notification System
function showToast(message, type = 'success') {
    const existingToast = document.querySelector('.toast');
    if (existingToast) {
        existingToast.remove();
    }

    const toast = document.createElement('div');
    toast.className = `fixed bottom-4 right-4 max-w-md px-6 py-4 rounded-lg shadow-lg z-50 transform transition-all duration-300 toast
        ${type === 'success' ? 'bg-green-500' : 'bg-red-500'} text-white`;
    
    toast.innerHTML = `
        <div class="flex items-center gap-3">
            <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'} text-lg"></i>
            <p class="font-medium">${message}</p>
        </div>
    `;
    
    document.body.appendChild(toast);
    
    // Animate in
    requestAnimationFrame(() => {
        toast.style.transform = 'translateY(0)';
        toast.style.opacity = '1';
    });
    
    // Remove after delay
    setTimeout(() => {
        toast.style.transform = 'translateY(100%)';
        toast.style.opacity = '0';
        setTimeout(() => toast.remove(), 300);
    }, 3000);
}

// Enhanced Mobile Experience
document.addEventListener('DOMContentLoaded', function() {
    if (window.innerWidth < 1024) {
        const cards = document.querySelectorAll('.lg\\:hidden .p-4');
        
        cards.forEach(card => {
            // Add touch feedback
            card.addEventListener('touchstart', () => {
                card.style.backgroundColor = 'rgba(0, 0, 0, 0.02)';
            });
            
            card.addEventListener('touchend', () => {
                card.style.backgroundColor = '';
            });

            // Add swipe to reveal actions
            let startX;
            let currentX;
            let isDragging = false;

            card.addEventListener('touchstart', (e) => {
                startX = e.touches[0].clientX;
                isDragging = true;
            });

            card.addEventListener('touchmove', (e) => {
                if (!isDragging) return;
                
                currentX = e.touches[0].clientX;
                const diff = currentX - startX;
                
                if (diff < 0) { // Only allow left swipe
                    card.style.transform = `translateX(${diff}px)`;
                }
            });

            card.addEventListener('touchend', () => {
                isDragging = false;
                card.style.transform = '';
            });
        });
    }
});

// Table Row Hover Animations
const tableRows = document.querySelectorAll('tbody tr');
tableRows.forEach(row => {
    const actions = row.querySelector('td:last-child div');
    
    row.addEventListener('mouseenter', () => {
        actions.style.opacity = '1';
    });
    
    row.addEventListener('mouseleave', () => {
        actions.style.opacity = '0';
    });
});

// Lazy Loading Images
document.addEventListener('DOMContentLoaded', function() {
    const images = document.querySelectorAll('img[data-src]');
    
    const imageObserver = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const img = entry.target;
                img.src = img.dataset.src;
                img.removeAttribute('data-src');
                observer.unobserve(img);
            }
        });
    });

    images.forEach(img => imageObserver.observe(img));
});
</script>

<style>
/* Animations */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateX(-20px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

/* Table Styles */
.table-wrapper {
    position: relative;
}

.table-wrapper::after {
    content: '';
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    width: 30px;
    background: linear-gradient(to right, transparent, white);
    pointer-events: none;
}

/* Custom Scrollbar */
.overflow-x-auto {
    scrollbar-width: thin;
    scrollbar-color: rgb(203 213 225) transparent;
}

.overflow-x-auto::-webkit-scrollbar {
    height: 6px;
}

.overflow-x-auto::-webkit-scrollbar-track {
    background: transparent;
}

.overflow-x-auto::-webkit-scrollbar-thumb {
    background-color: rgb(203 213 225);
    border-radius: 3px;
}

/* Toast Animation */
.toast {
    transform: translateY(100%);
    opacity: 0;
}

/* Mobile Touch Effects */
@media (max-width: 1024px) {
    .service-card {
        transition: transform 0.2s ease, background-color 0.2s ease;
    }
}

/* Loading Skeleton Animation */
@keyframes shimmer {
    0% {
        background-position: -200% 0;
    }
    100% {
        background-position: 200% 0;
    }
}

.skeleton {
    background: linear-gradient(90deg, 
        rgb(243 244 246) 25%, 
        rgb(229 231 235) 37%, 
        rgb(243 244 246) 63%
    );
    background-size: 400% 100%;
    animation: shimmer 1.4s ease infinite;
}

/* Hover Effects */
.hover-trigger .hover-target {
    transition: all 0.2s ease;
}

.hover-trigger:hover .hover-target {
    opacity: 1;
    transform: translateX(0);
}

/* Status Toggle Transitions */
.toggle-switch {
    transition: background-color 0.2s ease;
}

.toggle-handle {
    transition: transform 0.2s ease;
}
</style>