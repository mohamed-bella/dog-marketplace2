<!-- Reviews Section -->
<section class="mt-16 space-y-8">
     <!-- Reviews Header -->
     <div class="flex items-center justify-between">
          <div class="space-y-1">
               <h2 class="text-2xl font-bold text-gray-900">Avis et commentaires</h2>
               <p class="text-sm text-gray-500">
                    <%= reviews.length %> avis • Note moyenne <%= (reviews.reduce((sum, r)=> sum + r.rating, 0) / reviews.length).toFixed(1) %> sur 5
               </p>
          </div>

          <!-- Rating Overview -->
          <div class="hidden lg:flex items-center space-x-8">
               <div class="flex items-center gap-2">
                    <div class="flex">
                         <% for(let i=0; i < 5; i++) { %>
                              <svg class="w-5 h-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                   <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                              </svg>
                              <% } %>
                    </div>
               </div>

               <!-- Rating Breakdown -->
               <div class="space-y-2">
                    <% for(let i=5; i>= 1; i--) { %>
                         <div class="flex items-center gap-2">
                              <span class="text-sm text-gray-600 w-3">
                                   <%= i %>
                              </span>
                              <div class="w-32 h-2 bg-gray-200 rounded-full">
                                   <% const percentage=(reviews.filter(r=> r.rating === i).length / reviews.length) * 100 %>
                                        <div class="h-full bg-yellow-400 rounded-full" style="width: <%= percentage %>%"></div>
                              </div>
                              <span class="text-sm text-gray-500">
                                   <%= Math.round(percentage) %>%
                              </span>
                         </div>
                         <% } %>
               </div>
          </div>
     </div>

     <!-- Review Form -->
     <div class="bg-white rounded-2xl shadow-sm p-6" x-data="{ rating: 0 }">
          <h3 class="text-lg font-semibold text-gray-900 mb-6">Partagez votre expérience</h3>

          <form id="reviewForm" class="space-y-6" action="/services/<%= service._id %>/review" method="POST">
               <!-- Star Rating -->
               <div class="space-y-2">
                    <label class="block text-sm font-medium text-gray-700">
                         Note
                    </label>
                    <div class="flex items-center gap-1">
                         <% for(let i=1; i <=5; i++) { %>
                              <button type="button" class="p-1 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 rounded-full" @click="rating = <%= i %>">
                                   <svg class="w-8 h-8" :class="rating >= <%= i %> ? 'text-yellow-400' : 'text-gray-300'" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                                   </svg>
                              </button>
                              <% } %>
                    </div>
                    <input type="hidden" name="rating" x-model="rating">
               </div>

               <!-- Review Text -->
               <div class="space-y-2">
                    <label for="review-text" class="block text-sm font-medium text-gray-700">
                         Votre avis
                    </label>
                    <div class="relative">
                         <textarea id="review-text" name="comment" rows="4" class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none" placeholder="Partagez votre expérience avec ce service..." required></textarea>
                         <div class="absolute bottom-2 right-2 text-sm text-gray-400">
                              <span x-text="$refs.reviewText?.value?.length || 0"></span>/500
                         </div>
                    </div>
               </div>



               <button type="submit" class="w-full sm:w-auto px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors" :disabled="!rating">
                    Publier l'avis
               </button>
          </form>
     </div>

     <!-- Reviews List -->
     <div class="space-y-6">
          <% if (reviews && reviews.length> 0) { %>
               <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <% reviews.forEach(review=> { %>
                         <article class="bg-white rounded-2xl shadow-sm p-6">
                              <!-- Review Header -->
                              <div class="flex items-start space-x-4">
                                   <img src="<%= review.userId.image || '/default-avatar.jpg' %>" alt="" class="w-12 h-12 rounded-full object-cover" loading="lazy">
                                   <div class="flex-1 min-w-0">
                                        <div class="flex items-center justify-between">
                                             <h3 class="text-sm font-semibold text-gray-900 truncate">
                                                  <%= review.userId.displayName %>
                                             </h3>
                                             <time datetime="<%= review.createdAt %>" class="text-sm text-gray-500">
                                                  <%= new Date(review.createdAt).toLocaleDateString('fr-FR', { day: 'numeric' , month: 'long' , year: 'numeric' }) %>
                                             </time>
                                        </div>

                                        <!-- Star Rating -->
                                        <div class="flex items-center mt-1">
                                             <% for(let i=0; i < 5; i++) { %>
                                                  <svg class="w-5 h-5 <%= i < review.rating ? 'text-yellow-400' : 'text-gray-200' %>" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                       <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                                                  </svg>
                                                  <% } %>
                                        </div>
                                   </div>
                              </div>

                              <!-- Review Content -->
                              <div class="mt-4 space-y-4">
                                   <!-- Review Text -->
                                   <p class="text-gray-700 text-sm leading-relaxed whitespace-pre-line">
                                        <%= review.comment %>
                                   </p>

                                   <!-- Review Images (if any) -->
                                   <% if (review.images && review.images.length> 0) { %>
                                        <div class="grid grid-cols-3 gap-2">
                                             <% review.images.forEach(image=> { %>
                                                  <img src="<%= image %>" alt="" class="rounded-lg w-full h-24 object-cover cursor-pointer" onclick="openImageModal('<%= image %>')" loading="lazy">
                                                  <% }) %>
                                        </div>
                                        <% } %>

                                             <!-- Review Actions -->
                                             <div class="flex items-center gap-4 pt-2">
                                                  <button type="button" class="flex items-center text-sm text-gray-500 hover:text-gray-700">
                                                       <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5" />
                                                       </svg>
                                                       Utile
                                                  </button>
                                                  <button type="button" class="flex items-center text-sm text-gray-500 hover:text-gray-700">
                                                       <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z" />
                                                       </svg>
                                                       Répondre
                                                  </button>
                                                  <button type="button" class="flex items-center text-sm text-gray-500 hover:text-gray-700">
                                                       <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                                                       </svg>
                                                       Signaler
                                                  </button>
                                             </div>
                              </div>
                         </article>
                         <% }) %>
               </div>

               <!-- Load More Button -->
               <% if (reviews.length> 10) { %>
                    <div class="text-center">
                         <button type="button" class="inline-flex items-center px-6 py-3 border border-gray-300 text-base font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                              Voir plus d'avis
                              <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                   <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                              </svg>
                         </button>
                    </div>
                    <% } %>
                         <% } else { %>
                              <!-- Empty State -->
                              <div class="text-center py-12 bg-white rounded-2xl shadow-sm">
                                   <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                   </svg>
                                   <h3 class="mt-4 text-lg font-medium text-gray-900">Aucun avis pour le moment</h3>
                                   <p class="mt-2 text-gray-500">Soyez le premier à partager votre expérience !</p>
                                   <button type="button" class="mt-6 inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" onclick="document.getElementById('reviewForm').scrollIntoView({behavior: 'smooth'})">
                                        Rédiger un avis
                                   </button>
                              </div>
                              <% } %>
     </div>
</section>
<!-- Image Modal -->
<div id="imageModal" class="fixed inset-0 z-50 hidden" x-data="{ isOpen: false, currentImage: '' }" x-show="isOpen" @keydown.escape.window="isOpen = false">
     <div class="absolute inset-0 bg-black bg-opacity-90" @click="isOpen = false"></div>
     <div class="absolute inset-0 flex items-center justify-center p-4">
          <img :src="currentImage" alt="" class="max-h-full max-w-full object-contain">

          <!-- Close button -->
          <button type="button" class="absolute top-4 right-4 text-white hover:text-gray-300" @click="isOpen = false">
               <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
               </svg>
          </button>
     </div>
</div>

<!-- Share Modal -->
<div id="shareModal" class="fixed inset-0 z-50 hidden" x-data="{ isOpen: false }" x-show="isOpen" @keydown.escape.window="isOpen = false">
     <div class="absolute inset-0 bg-black bg-opacity-50" @click="isOpen = false"></div>
     <div class="absolute inset-x-4 top-[10%] md:top-[20%] md:inset-x-auto md:left-1/2 md:-translate-x-1/2 max-w-lg w-full">
          <div class="bg-white rounded-2xl shadow-xl">
               <div class="p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">Partager ce service</h3>

                    <!-- Share buttons -->
                    <div class="grid grid-cols-4 gap-4">
                         <!-- Facebook -->
                         <button type="button" class="flex flex-col items-center space-y-2 p-4 rounded-lg hover:bg-gray-50" onclick="shareToFacebook()">
                              <div class="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center">
                                   <svg class="w-6 h-6 text-blue-600" fill="currentColor" viewBox="0 0 24 24">
                                        <path d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z" />
                                   </svg>
                              </div>
                              <span class="text-sm text-gray-600">Facebook</span>
                         </button>

                         <!-- Twitter -->
                         <button type="button" class="flex flex-col items-center space-y-2 p-4 rounded-lg hover:bg-gray-50" onclick="shareToTwitter()">
                              <div class="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center">
                                   <svg class="w-6 h-6 text-blue-400" fill="currentColor" viewBox="0 0 24 24">
                                        <path d="M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z" />
                                   </svg>
                              </div>
                              <span class="text-sm text-gray-600">Twitter</span>
                         </button>

                         <!-- WhatsApp -->
                         <button type="button" class="flex flex-col items-center space-y-2 p-4 rounded-lg hover:bg-gray-50" onclick="shareToWhatsApp()">
                              <div class="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center">
                                   <svg class="w-6 h-6 text-green-600" fill="currentColor" viewBox="0 0 24 24">
                                        <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z" />
                                   </svg>
                              </div>
                              <span class="text-sm text-gray-600">WhatsApp</span>
                         </button>

                         <!-- Copy Link -->
                         <button type="button" class="flex flex-col items-center space-y-2 p-4 rounded-lg hover:bg-gray-50" @click="copyToClipboard">
                              <div class="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center">
                                   <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3" />
                                   </svg>
                              </div>
                              <span class="text-sm text-gray-600">Copier le lien</span>
                         </button>
                    </div>
               </div>
          </div>
     </div>
</div>

<!-- JavaScript for sharing functionality -->
<script>
     function shareToFacebook() {
          const url = encodeURIComponent(window.location.href);
          const title = encodeURIComponent('<%= service.serviceName %>');
          window.open(`https://www.facebook.com/sharer/sharer.php?u=${url}`, '_blank');
     }

     function shareToTwitter() {
          const url = encodeURIComponent(window.location.href);
          const text = encodeURIComponent(`Découvrez ce service : <%= service.serviceName %>`);
          window.open(`https://twitter.com/intent/tweet?url=${url}&text=${text}`, '_blank');
     }

     function shareToWhatsApp() {
          const url = encodeURIComponent(window.location.href);
          const text = encodeURIComponent(`Découvrez ce service : <%= service.serviceName %>`);
          window.open(`https://wa.me/?text=${text}%20${url}`, '_blank');
     }

     function copyToClipboard() {
          navigator.clipboard.writeText(window.location.href).then(() => {
               // Show success toast
               showToast('Lien copié !');
          });
     }


     ```javascript
function showToast(message) {
  const toast = document.createElement('div');
  toast.className = 'fixed bottom-4 left-1/2 transform -translate-x-1/2 bg-gray-900 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-fade-in';
  toast.textContent = message;
  document.body.appendChild(toast);

  // Remove toast after 3 seconds
  setTimeout(() => {
    toast.classList.add('animate-fade-out');
    setTimeout(() => toast.remove(), 300);
  }, 3000);
}

// Review functionality
document.addEventListener('DOMContentLoaded', function() {
  const reviewForm = document.getElementById('reviewForm');
  const photoUpload = document.querySelector('input[type="file"]');
  const photoPreviewContainer = document.querySelector('.photo-preview-container');

  // Handle review submission
  reviewForm?.addEventListener('submit', async function(e) {
    e.preventDefault();

    const formData = new FormData(this);
    const submitButton = this.querySelector('button[type="submit"]');
    
    try {
      submitButton.disabled = true;
      submitButton.innerHTML = `
          < svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns = "http://www.w3.org/2000/svg" fill = "none" viewBox = "0 0 24 24" >
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </ >
          Publication en cours...
     `;

      const response = await fetch('/services/<%= service._id %>/review', {
        method: 'POST',
        body: formData
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.message || 'Une erreur est survenue');
      }

      showToast('Votre avis a été publié avec succès !');
      setTimeout(() => window.location.reload(), 1000);

    } catch (error) {
      showToast(error.message);
      submitButton.disabled = false;
      submitButton.textContent = 'Publier l'avis';
    }
  });

  // Handle photo upload
  photoUpload?.addEventListener('change', function(e) {
    const files = Array.from(e.target.files);
    const maxFiles = 5;
    const maxSize = 5 * 1024 * 1024; // 5MB

    if (files.length > maxFiles) {
      showToast(`Vous pouvez télécharger maximum ${ maxFiles } photos`);
      return;
    }

    files.forEach(file => {
      if (file.size > maxSize) {
        showToast(`Le fichier ${ file.name } est trop volumineux.Maximum 5MB`);
        return;
      }

      const reader = new FileReader();
      reader.onload = function(e) {
        const preview = document.createElement('div');
        preview.className = 'relative w-20 h-20';
        preview.innerHTML = `
          < img src = "${e.target.result}" class="w-full h-full object-cover rounded-lg" alt = "Preview" >
               <button type="button" class="absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center hover:bg-red-600 focus:outline-none">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                         <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
               </button>
     `;

        preview.querySelector('button').addEventListener('click', function() {
          preview.remove();
        });

        photoPreviewContainer?.appendChild(preview);
      };
      reader.readAsDataURL(file);
    });
  });

  // Handle image modal
  function openImageModal(imageSrc) {
    Alpine.store('imageModal', {
      isOpen: true,
      currentImage: imageSrc
    });
  }

  // Handle review helpfulness
  document.querySelectorAll('.helpful-button').forEach(button => {
    button.addEventListener('click', async function() {
      const reviewId = this.dataset.reviewId;
      try {
        const response = await fetch(`/ reviews / ${ reviewId }/helpful`, {
     method: 'POST',
          headers: {
          'Content-Type': 'application/json'
     }
        });

     const data = await response.json();

     if (!response.ok) {
          throw new Error(data.message);
     }

     // Update helpful count
     this.querySelector('.helpful-count').textContent = data.helpfulCount;
     this.classList.toggle('text-blue-600');
        
      } catch (error) {
          showToast(error.message);
     }
    });
  });

     // Initialize view tracking
     function trackServiceView() {
          const serviceId = '<%= service._id %>';
          const viewedServices = JSON.parse(localStorage.getItem('viewedServices') || '[]');

          if (!viewedServices.includes(serviceId)) {
               fetch(`/services/${serviceId}/view`, {
                    method: 'POST',
                    headers: {
                         'Content-Type': 'application/json'
                    }
               }).then(() => {
                    viewedServices.push(serviceId);
                    localStorage.setItem('viewedServices', JSON.stringify(viewedServices));
               }).catch(console.error);
          }
     }

     // Initialize availability calendar
     function initializeCalendar() {
          const availability = <%= JSON.stringify(service.availability || {}) %>;
          const calendar = document.getElementById('availability-calendar');

          if (!calendar) return;

          // Add calendar functionality here if needed
     }

     // Initialize map if coordinates are available
     function initializeMap() {
          const coordinates = <%= JSON.stringify(service.coordinates || null) %>;

          if (!coordinates) return;

          // Add map initialization here if needed
     }

     // Initialize components
     trackServiceView();
     initializeCalendar();
     initializeMap();
});

     // Add custom animations
     const customStyles = `
  @keyframes fade-in {
    from { opacity: 0; transform: translate(-50%, 1rem); }
    to { opacity: 1; transform: translate(-50%, 0); }
  }

  @keyframes fade-out {
    from { opacity: 1; transform: translate(-50%, 0); }
    to { opacity: 0; transform: translate(-50%, 1rem); }
  }

  .animate-fade-in {
    animation: fade-in 0.3s ease-out forwards;
  }

  .animate-fade-out {
    animation: fade-out 0.3s ease-out forwards;
  }
`;

     const styleSheet = document.createElement('style');
     styleSheet.textContent = customStyles;
     document.head.appendChild(styleSheet);
</script>