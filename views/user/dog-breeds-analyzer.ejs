<!DOCTYPE html>
<html lang="ar" dir="rtl">

<head>
     <meta charset="UTF-8">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <title>محلل سلالات الكلاب بالذكاء الاصطناعي</title>
     <script src="https://cdn.tailwindcss.com"></script>
     <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
     <!-- Add Arabic Google Font -->
     <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+Arabic:wght@300;400;500;600;700&display=swap" rel="stylesheet">
     <style>
          * {
               font-family: 'IBM Plex Sans Arabic', sans-serif;
          }

          .gradient-bg {
               background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
          }

          .neural-pattern {
               background-image: radial-gradient(circle at 25px 25px, rgba(255, 255, 255, 0.2) 2%, transparent 0%),
                    radial-gradient(circle at 75px 75px, rgba(255, 255, 255, 0.2) 2%, transparent 0%);
               background-size: 100px 100px;
          }

          @keyframes pulse-border {
               0% {
                    border-color: rgba(99, 102, 241, 0.4);
               }

               50% {
                    border-color: rgba(99, 102, 241, 0.8);
               }

               100% {
                    border-color: rgba(99, 102, 241, 0.4);
               }
          }

          .animate-border {
               animation: pulse-border 2s infinite;
          }
     </style>
</head>

<%- include('include/head.ejs', { user }) %>
     <%- include('include/navbar.ejs', { user }) %>

          <body class="min-h-screen bg-gray-900 text-white">
               <div class="neural-pattern min-h-screen py-12 px-4 sm:px-6 lg:px-8">
                    <div class="max-w-5xl mx-auto">
                         <!-- Header Section -->
                         <div class="text-center mb-12">
                              <div class="inline-block p-2 rounded-xl gradient-bg mb-6">
                                   <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                                   </svg>
                              </div>
                              <h1 class="text-4xl font-bold text-white mb-4">محلل سلالات الكلاب</h1>
                              <p class="text-gray-300 text-lg">اكتشف سلالة كلبك باستخدام تقنيات الذكاء الاصطناعي المتقدمة</p>
                         </div>

                         <!-- Main Content -->
                         <div class="bg-white/10 backdrop-blur-lg rounded-2xl shadow-2xl p-8">
                              <!-- Upload Area -->
                              <div id="dropArea" class="border-4 border-dashed border-indigo-500/50 rounded-2xl p-8 text-center mb-8 hover:border-indigo-400 transition-colors duration-300 animate-border">
                                   <div class="space-y-6">
                                        <div class="gradient-bg inline-block p-4 rounded-full">
                                             <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                             </svg>
                                        </div>
                                        <div class="text-gray-300 text-lg">
                                             اسحب الصورة هنا أو
                                             <label class="text-indigo-400 hover:text-indigo-300 cursor-pointer transition-colors duration-300">
                                                  <span>اختر ملفاً</span>
                                                  <input type="file" id="fileInput" class="hidden" accept="image/*">
                                             </label>
                                        </div>
                                   </div>
                              </div>

                              <!-- Preview & Results Area -->
                              <div id="previewArea" class="hidden">
                                   <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                                        <!-- Image Preview -->
                                        <div class="bg-gray-800/50 rounded-xl p-6">
                                             <h3 class="text-xl font-semibold mb-4 text-indigo-300">معاينة الصورة</h3>
                                             <div class="relative rounded-lg overflow-hidden">
                                                  <img id="preview" class="w-full h-auto rounded-lg shadow-lg">
                                                  <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent pointer-events-none"></div>
                                             </div>
                                        </div>

                                        <!-- Analysis Results -->
                                        <div class="bg-gray-800/50 rounded-xl p-6">
                                             <h3 class="text-xl font-semibold mb-4 text-indigo-300">نتائج التحليل</h3>
                                             <div id="results" class="space-y-3"></div>
                                        </div>
                                   </div>
                              </div>
                         </div>
                    </div>
               </div>

               <script>
                    document.addEventListener("DOMContentLoaded", () => {
                         const dropArea = document.getElementById('dropArea');
                         const fileInput = document.getElementById('fileInput');
                         const preview = document.getElementById('preview');
                         const previewArea = document.getElementById('previewArea');
                         const resultsDiv = document.getElementById('results');

                         ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(event => {
                              dropArea.addEventListener(event, (e) => {
                                   e.preventDefault();
                                   e.stopPropagation();
                              });
                         });

                         dropArea.addEventListener('drop', handleFileSelect);
                         fileInput.addEventListener('change', handleFileSelect);

                         function handleFileSelect(e) {
                              const file = e.target.files ? e.target.files[0] : e.dataTransfer.files[0];
                              // if (file && file.type.startsWith('image/')) {
                              preview.src = URL.createObjectURL(file);
                              previewArea.classList.remove('hidden');
                              analyzeDogBreed(file);
                              // }
                         }

                         async function analyzeDogBreed(file, retryCount = 0) {
                              const formData = new FormData();
                              formData.append('image', file);

                              Swal.fire({
                                   title: 'جارٍ التحليل...',
                                   html: '<div class="space-y-3"><div class="animate-spin rounded-full h-10 w-10 border-b-2 border-indigo-500 mx-auto"></div><p class="text-gray-400">يتم تحليل الصورة باستخدام الذكاء الاصطناعي</p></div>',
                                   showConfirmButton: false,
                                   allowOutsideClick: false,
                                   background: '#1F2937',
                                   color: '#fff'
                              });

                              try {
                                   const response = await fetch('/analyze-breed', {
                                        method: 'POST',
                                        body: formData
                                   });

                                   const results = await response.json();

                                   // Check if the model is still loading and retry if necessary
                                   if (results.error && results.error.includes("currently loading") && retryCount < 5) {
                                        // Wait for a short period before retrying
                                        await new Promise(resolve => setTimeout(resolve, 5000)); // Wait 5 seconds
                                        return analyzeDogBreed(file, retryCount + 1); // Retry with an incremented retryCount
                                   }

                                   // Close the loading modal and display results if model is ready
                                   Swal.close();
                                   displayResults(results);
                              } catch (error) {
                                   Swal.fire({
                                        title: 'خطأ',
                                        text: 'حدث خطأ أثناء تحليل الصورة',
                                        icon: 'error',
                                        background: '#1F2937',
                                        color: '#fff'
                                   });
                              }
                         }

                         function displayResults(results) {
                              resultsDiv.innerHTML = '';
                              results.forEach((result, index) => {
                                   const resultElement = document.createElement('div');
                                   resultElement.className = 'relative overflow-hidden bg-gray-700/50 rounded-lg p-4 transition-all duration-300 hover:bg-gray-700/70';
                                   resultElement.innerHTML = `
                        <div class="flex justify-between items-center">
                            <span class="text-lg font-medium text-gray-200">${result.label}</span>
                            <div class="flex items-center">
                                <div class="w-24 h-2 bg-gray-700 rounded-full mr-3">
                                    <div class="h-full rounded-full gradient-bg" style="width: ${result.score * 100}%"></div>
                                </div>
                                <span class="font-bold text-indigo-400">${(result.score * 100).toFixed(1)}%</span>
                            </div>
                        </div>
                    `;
                                   resultsDiv.appendChild(resultElement);
                              });
                         }
                    });
               </script>
          </body>

</html>