<!DOCTYPE html>
<html lang="fr">

<head>
     <!-- Meta Tags and Title -->
     <meta charset="UTF-8">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <title>Admin Dashboard | Ndressilik</title>

     <!-- Fonts and Icons -->
     <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

     <!-- CSS Libraries -->
     <script src="https://cdn.tailwindcss.com"></script>

     <!-- Custom Styles -->
     <style>
          /* Root Variables */
          :root {
               --primary-color: #000;
               --secondary-color: #fff;
               --text-color: #000;
               --sidebar-width: 250px;
          }

          /* Global Styles */
          body {
               font-family: 'Roboto', sans-serif;
               background-color: var(--secondary-color);
               color: var(--text-color);
               margin: 0;
               padding: 0;
          }

          /* Dashboard Layout */
          .dashboard {
               display: flex;
               min-height: 100vh;
          }

          /* Sidebar Styles */
          .sidebar {
               width: var(--sidebar-width);
               background-color: var(--primary-color);
               color: var(--secondary-color);
               padding: 20px;
               transition: transform 0.3s ease;
          }

          .sidebar h2 {
               margin-bottom: 30px;
               font-weight: 700;
               font-size: 1.5rem;
          }

          .sidebar ul {
               list-style-type: none;
          }

          .sidebar li {
               margin-bottom: 15px;
          }

          .sidebar a {
               color: var(--secondary-color);
               text-decoration: none;
               display: flex;
               align-items: center;
               transition: opacity 0.3s ease;
          }

          .sidebar a:hover {
               opacity: 0.8;
          }

          .sidebar i {
               margin-right: 10px;
               width: 20px;
          }

          /* Main Content Styles */
          .main-content {
               flex-grow: 1;
               padding: 30px;
          }

          .welcome-message {
               margin-bottom: 30px;
          }

          .welcome-message h2 {
               font-size: 2rem;
               margin-bottom: 10px;
          }

          /* Responsive Menu Toggle */
          .menu-toggle {
               display: none;
               position: fixed;
               top: 20px;
               right: 20px;
               background-color: var(--primary-color);
               color: var(--secondary-color);
               border: none;
               padding: 10px;
               font-size: 1.5rem;
               cursor: pointer;
               z-index: 1000;
          }

          @media (max-width: 768px) {
               .dashboard {
                    flex-direction: column;
               }

               .sidebar {
                    position: fixed;
                    left: -250px;
                    top: 0;
                    bottom: 0;
                    z-index: 999;
               }

               .sidebar.active {
                    left: 0;
               }

               .main-content {
                    margin-left: 0;
               }

               .menu-toggle {
                    display: block;
               }
          }

          /* Button Loading Animation */
          .btn-loading {
               position: relative;
               pointer-events: none;
          }

          .btn-loading::after {
               content: '';
               position: absolute;
               width: 16px;
               height: 16px;
               top: 0;
               left: 0;
               right: 0;
               bottom: 0;
               margin: auto;
               border: 4px solid transparent;
               border-top-color: #ffffff;
               border-radius: 50%;
               animation: btn-loading-spinner 1s ease infinite;
          }

          @keyframes btn-loading-spinner {
               from {
                    transform: rotate(0turn);
               }

               to {
                    transform: rotate(1turn);
               }
          }

          /* Custom styles for the badge selection */
          .badge-container {
               scrollbar-width: thin;
               scrollbar-color: #888 #f1f1f1;
          }

          .badge-container::-webkit-scrollbar {
               width: 6px;
          }

          .badge-container::-webkit-scrollbar-track {
               background: #f1f1f1;
               border-radius: 3px;
          }

          .badge-container::-webkit-scrollbar-thumb {
               background: #888;
               border-radius: 3px;
          }

          .badge-container::-webkit-scrollbar-thumb:hover {
               background: #666;
          }

          .badge-card {
               transition: all 0.2s ease-in-out;
          }

          .badge-card:hover {
               transform: translateY(-1px);
          }

          .badge-checkbox {
               cursor: pointer;
          }

          .badge-checkbox:checked {
               background-color: #2563eb;
               border-color: #2563eb;
          }
     </style>
</head>

<body>
     <!-- Responsive Menu Toggle Button -->
     <button class="menu-toggle" id="menuToggle">
          <i class="fas fa-bars"></i>
     </button>

     <!-- Dashboard Layout -->
     <div class="dashboard">
          <!-- Sidebar Navigation -->
          <aside class="sidebar" id="sidebar">
               <h2>Admin Dashboard</h2>
               <nav>
                    <ul>
                         <li><a href="/admin/articles/new"><i class="fas fa-pen"></i> Write Article</a></li>
                         <li><a href="/admin/articles"><i class="fas fa-pen"></i> Edit  Article</a></li>
                         <li><a href="/admin/manage-comments"><i class="fas fa-comments"></i> Manage Comments</a></li>
                         <li><a href="/admin/profile"><i class="fas fa-user"></i> Profile</a></li>
                    </ul>
               </nav>
               <a href="/admin/logout" class="logout-btn"><i class="fas fa-sign-out-alt"></i> Logout</a>
          </aside>

          <!-- Main Content Area -->
          <main class="main-content">
               <!-- Welcome Message -->
               <div class="welcome-message">
                    <h2>Welcome, Admin!</h2>
                    <p>Manage users and control their accounts.</p>
               </div>

               <!-- User Management Section -->
               <div class="container mx-auto px-4 py-8">
                    <div class="bg-white rounded-lg shadow-lg p-6">
                         <h1 class="text-2xl font-bold mb-6">User Management</h1>

                         <!-- Users Table -->
                         <div class="overflow-x-auto">
                              <table class="min-w-full divide-y divide-gray-200">
                                   <thead class="bg-gray-50">
                                        <tr>
                                             <!-- Table Headers -->
                                             <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                                  User
                                             </th>
                                             <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                                  Status
                                             </th>
                                             <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                                  Badges
                                             </th>
                                             <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                                  Actions
                                             </th>
                                        </tr>
                                   </thead>
                                   <tbody class="bg-white divide-y divide-gray-200" id="usersTableBody">
                                        <% users.forEach(user=> { %>
                                             <tr data-user-id="<%= user._id %>">
                                                  <!-- User Info -->
                                                  <td class="px-6 py-4 whitespace-nowrap">
                                                       <div class="flex items-center">
                                                            <div class="flex-shrink-0 h-10 w-10">
                                                                 <img class="h-10 w-10 rounded-full" src="<%= user.profileImage %>" alt="">
                                                            </div>
                                                            <div class="ml-4">
                                                                 <div class="text-sm font-medium text-gray-900">
                                                                      <%= user.displayName %>
                                                                 </div>
                                                                 <div class="text-sm text-gray-500">
                                                                      <%= user.email %>
                                                                 </div>
                                                            </div>
                                                       </div>
                                                  </td>
                                                  <!-- User Status -->
                                                  <td class="px-6 py-4 whitespace-nowrap">
                                                       <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= user.isVerified ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800' %>">
                                                            <%= user.isVerified ? 'Verified' : 'Pending' %>
                                                       </span>
                                                  </td>
                                                  <!-- User Badges -->
                                                  <td class="px-6 py-4 whitespace-nowrap">
                                                       <div class="flex space-x-2">
                                                            <% user.badges.forEach(badge=> { %>
                                                                 <span class="px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800">
                                                                      <%= badge.type %>
                                                                 </span>
                                                                 <% }) %>
                                                       </div>
                                                  </td>
                                                  <!-- Action Buttons -->
                                                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                                                       <!-- Edit User Button -->
                                                       <button class="bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded transition-colors edit-user-btn" data-user-id="<%= user._id %>">
                                                            Edit
                                                       </button>
                                                       <!-- Verify User Button -->
                                                       <button class="bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded transition-colors verify-user-btn <%= user.isVerified ? 'opacity-50 cursor-not-allowed' : '' %>" data-user-id="<%= user._id %>" <%=user.isVerified ? 'disabled' : '' %>>
                                                            Verify
                                                       </button>
                                                       <!-- Delete User Button -->
                                                       <button class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded transition-colors delete-user-btn" data-user-id="<%= user._id %>">
                                                            Delete
                                                       </button>
                                                  </td>
                                             </tr>
                                             <% }) %>
                                   </tbody>
                              </table>
                         </div>
                    </div>
               </div>

               <script src="https://cdn.tiny.cloud/1/mw3gwxirndueqz641hsa1ah30e24usnnfyfk1jh2no0cplj5/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>


               <div class="container mx-auto mt-10">
                    <h2 class="text-2xl font-bold">Broadcast Email</h2>
                    <form action="/admin/broadcast" method="POST" class="mt-6">
                         <div class="mb-4">
                              <label for="subject" class="block font-semibold">Subject</label>
                              <input type="text" name="subject" id="subject" class="w-full p-2 border border-gray-300 rounded" required>
                         </div>
                         <div class="mb-4">
                              <label for="message" class="block font-semibold">Message</label>
                              <textarea name="message" id="message" rows="6" class="w-full p-2 border border-gray-300 rounded"></textarea>
                         </div>
                         <button type="submit" class="px-6 py-2 bg-blue-600 text-white rounded">Send Broadcast</button>
                    </form>
               </div>

               <!-- Include TinyMCE script -->

               <!-- Initialize TinyMCE for the Message field -->
               <script>
                    tinymce.init({
                         selector: '#message',
                         plugins: 'link image code',
                         toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code',
                         menubar: false,
                         branding: false,
                         height: 300
                    });
               </script>



               <!-- JavaScript Libraries -->
               <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
               <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

               <!-- JavaScript for User Management -->
               <script>
                    $(document).ready(function () {
                         // Badge Data
                         const badgeData = {
                              "lead-expert": {
                                   description: "Consistently high-rated professional",
                                   image: "https://ndressilik.s3.eu-north-1.amazonaws.com/badges/lead-badge.png"
                              },
                              "prominent": {
                                   description: "Verified expertise and credentials",
                                   image: "https://ndressilik.s3.eu-north-1.amazonaws.com/badges/prominent-badge.png"
                              },
                              "specialist": {
                                   description: "Fast and reliable responses",
                                   image: "https://ndressilik.s3.eu-north-1.amazonaws.com/badges/specialist-badge.png"
                              },
                              "chosen": {
                                   description: "Proven track record of success",
                                   image: "https://ndressilik.s3.eu-north-1.amazonaws.com/badges/chosen-badge.png"
                              },
                              "basic": {
                                   description: "Premium service provider",
                                   image: "https://ndressilik.s3.eu-north-1.amazonaws.com/badges/basic-badge.png"
                              }
                         };

                         // Edit User Functionality
                         $('.edit-user-btn').click(function () {
                              const userId = $(this).data('user-id');
                              const $btn = $(this);

                              // Fetch user data via AJAX
                              $.ajax({
                                   url: `/admin/users/${userId}`,
                                   method: 'GET',
                                   success: function (userData) {
                                        // Pre-select user's current badges
                                        const userBadges = userData.badges.map(badge => badge.type);

                                        // Generate Badge Cards HTML
                                        const badgeCardsHtml = Object.entries(badgeData).map(([type, data]) => `
                                    <div class="badge-card cursor-pointer bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-300 border border-gray-200 mb-2" data-badge-type="${type}">
                                        <div class="p-3">
                                            <div class="flex items-center justify-between mb-2">
                                                <div class="flex items-center space-x-2">
                                                    <div class="flex items-center justify-center w-5 h-5">
                                                        <input type="checkbox" class="badge-checkbox w-4 h-4 text-blue-600 rounded border-gray-300" value="${type}" ${userBadges.includes(type) ? 'checked' : ''}>
                                                    </div>
                                                    <h3 class="text-sm font-medium text-gray-800">${type.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase())}</h3>
                                                </div>
                                                <div class="badge-icon w-8 h-8 rounded-full bg-gray-100 flex items-center justify-center">
                                                    <img src="${data.image}" alt="${type}" class="w-6 h-6">
                                                </div>
                                            </div>
                                            <p class="text-gray-600 text-xs">${data.description}</p>
                                        </div>
                                    </div>
                                `).join('');

                                        // Show edit form using SweetAlert2
                                        Swal.fire({
                                             title: 'Edit User',
                                             html: `
                                        <div class="space-y-4">
                                            <!-- Badge Selection -->
                                            <div>
                                                <div class="flex justify-between items-center mb-2">
                                                    <label class="block text-sm font-medium text-gray-700">Select Badges</label>
                                                    <button type="button" id="select-all-badges" class="text-xs text-blue-600 hover:text-blue-800 font-medium">
                                                        Select All
                                                    </button>
                                                </div>
                                                <div class="badge-container max-h-48 overflow-y-auto mb-4 px-2">
                                                    ${badgeCardsHtml}
                                                </div>
                                                <div class="text-xs text-gray-500 mt-1">
                                                    Selected: <span id="selected-count">0</span> badges
                                                </div>
                                            </div>
                                            <!-- Trust Score Adjustment -->
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700">Trust Score Adjustment</label>
                                                <input type="number" id="trust-score" min="0" max="100" value="${userData.ndressilikScore}" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                                            </div>
                                            <!-- User Status -->
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700">User Status</label>
                                                <select id="user-status" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                                                    <option value="active" ${userData.status === 'active' ? 'selected' : ''}>Active</option>
                                                    <option value="pending" ${userData.status === 'pending' ? 'selected' : ''}>Pending</option>
                                                    <option value="suspended" ${userData.status === 'suspended' ? 'selected' : ''}>Suspended</option>
                                                </select>
                                            </div>
                                        </div>
                                    `,
                                             showCancelButton: true,
                                             confirmButtonText: 'Update',
                                             showLoaderOnConfirm: true,
                                             width: '32rem',
                                             didOpen: () => {
                                                  // Update selected count
                                                  updateSelectedCount();

                                                  // Badge card selection
                                                  $('.badge-card').click(function (e) {
                                                       if (!$(e.target).is('input')) {
                                                            const checkbox = $(this).find('input[type="checkbox"]');
                                                            checkbox.prop('checked', !checkbox.prop('checked'));
                                                            updateSelectedCount();
                                                            updateCardStyle($(this));
                                                       }
                                                  });

                                                  // Checkbox click
                                                  $('.badge-checkbox').click(function (e) {
                                                       e.stopPropagation();
                                                       updateSelectedCount();
                                                       updateCardStyle($(this).closest('.badge-card'));
                                                  });

                                                  // Handle select all button
                                                  $('#select-all-badges').click(function () {
                                                       const allChecked = $('.badge-checkbox:checked').length === $('.badge-checkbox').length;
                                                       $('.badge-checkbox').prop('checked', !allChecked);
                                                       updateSelectedCount();
                                                       $('.badge-card').each(function () {
                                                            updateCardStyle($(this));
                                                       });
                                                       $(this).text(allChecked ? 'Select All' : 'Deselect All');
                                                  });

                                                  // Update card styles based on initial selection
                                                  $('.badge-card').each(function () {
                                                       updateCardStyle($(this));
                                                  });

                                                  // Functions to update selected count and card style
                                                  function updateSelectedCount() {
                                                       const count = $('.badge-checkbox:checked').length;
                                                       $('#selected-count').text(count);
                                                  }

                                                  function updateCardStyle($card) {
                                                       const isChecked = $card.find('.badge-checkbox').prop('checked');
                                                       $card.toggleClass('ring-2 ring-blue-500', isChecked);
                                                       $card.toggleClass('bg-blue-50', isChecked);
                                                  }
                                             },
                                             preConfirm: () => {
                                                  const selectedBadges = $('.badge-checkbox:checked').map(function () {
                                                       return this.value;
                                                  }).get();

                                                  const trustScore = $('#trust-score').val();
                                                  const status = $('#user-status').val();

                                                  // Validation
                                                  if (selectedBadges.length === 0) {
                                                       Swal.showValidationMessage('Please select at least one badge');
                                                       return false;
                                                  }

                                                  // Send update request via AJAX
                                                  return $.ajax({
                                                       url: `/admin/users/${userId}/update`,
                                                       method: 'POST',
                                                       data: {
                                                            badgeTypes: selectedBadges,
                                                            trustScore,
                                                            status
                                                       },
                                                       beforeSend: function () { $btn.addClass('btn-loading'); }
                                                  }).always(function () { $btn.removeClass('btn-loading'); });
                                             }
                                        }).then((result) => {
                                             if (result.isConfirmed) {
                                                  Swal.fire({
                                                       title: 'Success!',
                                                       text: 'User updated successfully',
                                                       icon: 'success'
                                                  }).then(() => {
                                                       window.location.reload();
                                                  });
                                             }
                                        });
                                   },
                                   error: function (error) {
                                        Swal.fire('Error', 'Failed to fetch user data', 'error');
                                   }
                              });
                         });

                         // Verify User Functionality
                         $('.verify-user-btn').click(function () {
                              const userId = $(this).data('user-id');
                              const $btn = $(this);

                              Swal.fire({
                                   title: 'Verify User',
                                   text: 'Are you sure you want to verify this user?',
                                   icon: 'question',
                                   showCancelButton: true,
                                   confirmButtonText: 'Verify',
                                   showLoaderOnConfirm: true,
                                   preConfirm: () => {
                                        return $.ajax({
                                             url: `/admin/users/${userId}/verify`,
                                             method: 'POST',
                                             beforeSend: function () { $btn.addClass('btn-loading'); }
                                        }).always(function () { $btn.removeClass('btn-loading'); });
                                   }
                              }).then((result) => {
                                   if (result.isConfirmed) {
                                        Swal.fire({
                                             title: 'Success!',
                                             text: 'User verified successfully',
                                             icon: 'success'
                                        }).then(() => {
                                             window.location.reload();
                                        });
                                   }
                              });
                         });

                         // Delete User Functionality
                         $('.delete-user-btn').click(function () {
                              const userId = $(this).data('user-id');
                              const $btn = $(this);

                              Swal.fire({
                                   title: 'Delete User',
                                   text: 'Are you sure you want to delete this user?',
                                   icon: 'warning',
                                   showCancelButton: true,
                                   confirmButtonText: 'Delete',
                                   showLoaderOnConfirm: true,
                                   preConfirm: () => {
                                        return $.ajax({
                                             url: `/admin/users/${userId}/delete`,
                                             method: 'DELETE',
                                             beforeSend: function () { $btn.addClass('btn-loading'); }
                                        }).always(function () { $btn.removeClass('btn-loading'); });
                                   }
                              }).then((result) => {
                                   if (result.isConfirmed) {
                                        Swal.fire({
                                             title: 'Deleted!',
                                             text: 'User has been deleted.',
                                             icon: 'success'
                                        }).then(() => {
                                             window.location.reload();
                                        });
                                   }
                              });
                         });
                    });
               </script>

               <!-- Responsive Sidebar Toggle Script -->
               <script>
                    const menuToggle = document.getElementById('menuToggle');
                    const sidebar = document.getElementById('sidebar');

                    menuToggle.addEventListener('click', () => {
                         sidebar.classList.toggle('active');
                    });
               </script>
          </main>
     </div>
</body>

</html>