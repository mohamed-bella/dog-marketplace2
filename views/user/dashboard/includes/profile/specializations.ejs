<!-- views/partials/trainer-specializations.ejs -->
<div class="bg-white border border-gray-200" id="specializationsSection">
    <!-- Header -->
    <div class="px-6 py-4 border-b border-gray-200 bg-black">
        <div class="flex items-center justify-between">
            <div class="flex items-center gap-3">
                <h3 class="text-lg font-semibold text-white">Spécialisations</h3>
                <div class="flex items-center gap-2">
                   
                </div>
            </div>
            <button type="button" 
                    onclick="toggleEditMode()"
                    class="text-sm text-white hover:text-white font-medium bg-red-600 px-4 py-3">
                <i class="fas fa-edit mr-1"></i>
                Modifier
            </button>
        </div>
    </div>

    <!-- View Mode -->
    <div id="viewMode" class="p-6">
        <% const allSpecializations = ['Comportementaliste', 'Attaque', 'Discipline', 'Freestyle']; %>
        <% if (user.specializations?.length > 0) { %>
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                <% user.specializations.forEach(spec => { %>
                    <div class="border border-gray-200 hover:border-red-600 
                               transition-colors duration-200 bg-white">
                        <div class="flex items-center p-4">
                            <div class="w-10 h-10 bg-black text-white flex items-center justify-center">
                                <i class="fas fa-dog"></i>
                            </div>
                            <div class="ml-4">
                                <h4 class="font-medium text-gray-900"><%= spec %></h4>
                                <p class="text-xs text-gray-500 mt-0.5">Certifié</p>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>
        <% } else { %>
            <div class="text-center py-8 border border-gray-200">
                <div class="w-16 h-16 bg-gray-50 flex items-center justify-center mx-auto mb-4">
                    <i class="fas fa-graduation-cap text-2xl text-red-600"></i>
                </div>
                <h4 class="font-medium text-gray-900 mb-1">Ajoutez vos spécialisations</h4>
                <p class="text-sm text-gray-500">Mettez en valeur votre expertise en éducation canine</p>
            </div>
        <% } %>
    </div>

    <!-- Edit Mode -->
    <form id="editMode" class="hidden">
        <div class="p-6">
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                <% allSpecializations.forEach(spec => { %>
                    <label class="relative block cursor-pointer">
                        <input type="checkbox" 
                               name="specializations" 
                               value="<%= spec %>"
                               class="peer hidden"
                               <%= user.specializations?.includes(spec) ? 'checked' : '' %>>
                        <div class="p-4 border-2 transition-colors duration-200
                                  peer-checked:border-red-600 peer-checked:bg-red-50
                                  border-gray-200 hover:border-red-300">
                            <div class="flex items-center gap-3">
                                <div class="w-10 h-10 transition-colors duration-200
                                          peer-checked:bg-black
                                          bg-gray-100 text-gray-500
                                          flex items-center justify-center
                                          peer-checked:text-white">
                                    <i class="fas fa-dog"></i>
                                </div>
                                <span class="font-medium text-gray-900"><%= spec %></span>
                            </div>
                        </div>
                        <div class="absolute top-4 right-4 w-5 h-5 border-2 transition-colors duration-200
                                  peer-checked:border-red-600 peer-checked:bg-red-600
                                  border-gray-300 flex items-center justify-center">
                            <i class="fas fa-check text-white scale-0 peer-checked:scale-100 transition-transform duration-200"></i>
                        </div>
                    </label>
                <% }); %>
            </div>

            <div class="flex gap-3 mt-6 pt-6 border-t border-gray-200">
                <button type="button" 
                        onclick="toggleEditMode()"
                        class="flex-1 py-2.5 text-gray-700 bg-gray-100 hover:bg-gray-200 
                               transition-colors duration-200 border border-gray-300">
                    Annuler
                </button>
                <button type="submit" 
                        class="flex-1 py-2.5 text-white bg-red-600 hover:bg-red-700 
                               transition-colors duration-200">
                    Enregistrer
                </button>
            </div>
        </div>
    </form>
</div>

<script>
// Icon mapping function
function getSpecializationIcon(spec) {
    const iconMap = {
        'Comportementaliste': 'fa-brain',      // Behavioral Trainer
        'Attaque': 'fa-fist-raised',           // Attack/Protection Training
        'Discipline': 'fa-graduation-cap',      // Discipline and Obedience
        'Freestyle': 'fa-dance'                 // Freestyle
    };
    return iconMap[spec] || 'fa-paw';
}

function toggleEditMode() {
    const viewMode = document.getElementById('viewMode');
    const editMode = document.getElementById('editMode');
    
    if (!viewMode || !editMode) return;
    
    viewMode.classList.toggle('hidden');
    editMode.classList.toggle('hidden');
}

document.getElementById('editMode')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const form = e.target;
    const submitBtn = form.querySelector('button[type="submit"]');
    if (!submitBtn) return;
    
    submitBtn.disabled = true;

    try {
        const selectedSpecs = Array.from(
            form.querySelectorAll('input[name="specializations"]:checked')
        ).map(input => input.value);

        if (selectedSpecs.length === 0) {
            throw new Error('Veuillez sélectionner au moins une spécialisation');
        }

        const response = await fetch('/dashboard/profile/update-trainer-specializations', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.content || ''
            },
            body: JSON.stringify({ specializations: selectedSpecs })
        });

        if (!response.ok) {
            const data = await response.json();
            throw new Error(data.message || 'Erreur lors de la mise à jour');
        }

        window.location.reload();
    } catch (error) {
        console.error('Error updating specializations:', error);
        alert(error.message);
        submitBtn.disabled = false;
    }
});

// Initialize checkboxes
document.addEventListener('DOMContentLoaded', () => {
    const checkboxes = document.querySelectorAll('input[name="specializations"]');
    checkboxes.forEach(checkbox => {
        checkbox.checked = checkbox.hasAttribute('checked');
    });
});
</script>

<style>
/* Clean transitions */
.transition-colors {
    transition-property: background-color, border-color, color;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 200ms;
}

.transition-transform {
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 200ms;
}

/* Checkbox animations */
.peer:checked ~ div i.fa-check {
    transform: scale(1);
}

/* Loading animation */
@keyframes spin {
    to { transform: rotate(360deg); }
}

.spin {
    animation: spin 1s linear infinite;
}
</style>