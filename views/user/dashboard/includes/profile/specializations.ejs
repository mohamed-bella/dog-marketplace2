<!-- specializations.ejs -->
<div class="bg-white rounded-xl shadow-sm overflow-hidden" id="specializationsSection">
     <!-- Header -->
     <div class="p-6 border-b border-gray-100 relative">
         <div class="absolute inset-x-0 bottom-0 h-0.5 bg-gradient-to-r from-indigo-500 to-indigo-600"></div>
         <div class="flex items-center justify-between">
             <div class="flex items-center gap-3">
                 <h3 class="text-xl font-semibold text-gray-800">Spécialisations</h3>
                 <span id="specializationCount" class="px-3 py-1 text-sm font-medium text-indigo-600 bg-indigo-50 rounded-full">
                     <%= user.specializations?.length || 0 %> sélectionnée<%= user.specializations?.length !== 1 ? 's' : '' %>
                 </span>
             </div>
         </div>
     </div>
 
     <!-- View Mode -->
     <div id="specializationsView" class="p-6">
         <% if (user.specializations?.length > 0) { %>
             <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                 <% user.specializations.forEach(spec => { 
                     const specInfo = specializations.find(s => s.value === spec);
                 %>
                     <div class="spec-card group">
                         <div class="flex items-center p-4 bg-gradient-to-br from-white to-indigo-50/30 
                             rounded-lg transition-all duration-200">
                             <div class="w-12 h-12 flex items-center justify-center rounded-lg 
                                 bg-indigo-600 text-white">
                                 <i class="fas <%= specInfo?.icon %>"></i>
                             </div>
                             <div class="ml-4">
                                 <h4 class="text-sm font-semibold text-gray-900">
                                     <%= specInfo?.label || spec %>
                                 </h4>
                                 <p class="mt-1 text-xs text-gray-500">Service certifié</p>
                             </div>
                             <div class="absolute -top-1 -right-1 w-3 h-3 bg-green-400 rounded-full 
                                 border-2 border-white scale-0 group-hover:scale-100 transition-transform"></div>
                         </div>
                     </div>
                 <% }); %>
             </div>
 
             <!-- Edit Button -->
             <div class="mt-8 text-center">
                 <button type="button" id="editSpecializationsBtn" 
                     class="inline-flex items-center gap-2 px-6 py-3 bg-indigo-50 text-indigo-600 
                     rounded-lg transition-all duration-200 hover:bg-indigo-600 hover:text-white">
                     <i class="fas fa-edit"></i>
                     <span>Modifier les spécialisations</span>
                 </button>
             </div>
         <% } else { %>
             <!-- Empty State -->
             <div class="text-center py-12">
                 <div class="inline-flex items-center justify-center w-20 h-20 rounded-full 
                     bg-indigo-50 mb-4">
                     <i class="fas fa-puzzle-piece text-3xl text-indigo-600"></i>
                 </div>
                 <h3 class="text-lg font-semibold text-gray-900 mb-2">Aucune spécialisation</h3>
                 <p class="text-gray-500 mb-6">Ajoutez vos spécialisations pour aider les clients à vous trouver</p>
                 <button type="button" id="editSpecializationsBtn" 
                     class="inline-flex items-center gap-2 px-6 py-3 bg-indigo-600 text-white 
                     rounded-lg transition-all duration-200 hover:bg-indigo-700">
                     <i class="fas fa-plus"></i>
                     <span>Ajouter des spécialisations</span>
                 </button>
             </div>
         <% } %>
     </div>
 
     <!-- Edit Mode -->
     <form id="specializationsForm" class="hidden">
         <div class="p-6 space-y-6">
             <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                 <% specializations.forEach(spec => { %>
                     <label class="spec-option group">
                         <input type="checkbox" name="specializations[]" 
                             value="<%= spec.value %>" 
                             class="hidden" 
                             <%= user.specializations?.includes(spec.value) ? 'checked' : '' %>>
                         <div class="p-4 rounded-lg border-2 transition-all duration-200
                             <%= user.specializations?.includes(spec.value) ? 
                                 'border-indigo-500 bg-indigo-50/50' : 
                                 'border-gray-200 hover:border-indigo-200' %>">
                             <div class="flex items-start gap-4">
                                 <div class="flex-shrink-0 w-6 h-6 rounded border-2 flex items-center justify-center
                                     <%= user.specializations?.includes(spec.value) ? 
                                         'border-indigo-500 bg-indigo-500' : 
                                         'border-gray-300' %>">
                                     <i class="fas fa-check text-white transform scale-0 transition-transform
                                         <%= user.specializations?.includes(spec.value) ? 'scale-100' : '' %>"></i>
                                 </div>
                                 <div>
                                     <h4 class="text-sm font-semibold text-gray-900">
                                         <%= spec.label %>
                                     </h4>
                                     <p class="mt-2 text-sm text-gray-500">
                                         <%= spec.description || `Description du service ${spec.label}...` %>
                                     </p>
                                 </div>
                             </div>
                         </div>
                     </label>
                 <% }); %>
             </div>
 
             <!-- Action Buttons -->
             <div class="flex gap-4 pt-6 border-t">
                 <button type="button" id="cancelSpecializationsBtn" 
                     class="flex-1 h-12 bg-gray-50 text-gray-700 rounded-lg hover:bg-gray-100
                     transition-all duration-200">
                     Annuler
                 </button>
                 <button type="submit" 
                     class="flex-1 h-12 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700
                     transition-all duration-200">
                     Enregistrer
                 </button>
             </div>
         </div>
     </form>
 </div>
 
 <script>
 document.addEventListener('DOMContentLoaded', function() {
     // Elements
     const section = document.getElementById('specializationsSection');
     const viewMode = document.getElementById('specializationsView');
     const editMode = document.getElementById('specializationsForm');
     const editBtn = document.getElementById('editSpecializationsBtn');
     const cancelBtn = document.getElementById('cancelSpecializationsBtn');
     const specializationOptions = document.querySelectorAll('.spec-option input[type="checkbox"]');
     
     // Toggle edit mode
     function toggleEditMode() {
         const isEditing = editMode.classList.contains('hidden');
         
         // Animate transition
         if (isEditing) {
             editMode.classList.remove('hidden');
             viewMode.classList.add('hidden');
         } else {
             viewMode.classList.remove('hidden');
             editMode.classList.add('hidden');
         }
         
         // Update selected count
         updateSelectedCount();
     }
     
     // Update selected count
     function updateSelectedCount() {
         const count = document.querySelectorAll('input[name="specializations[]"]:checked').length;
         const countDisplay = document.getElementById('specializationCount');
         countDisplay.textContent = `${count} sélectionnée${count !== 1 ? 's' : ''}`;
     }
     
     // Handle option selection
     specializationOptions.forEach(option => {
         option.addEventListener('change', function() {
             const label = this.closest('.spec-option');
             const checkIcon = label.querySelector('.fa-check');
             const container = label.querySelector('.p-4');
             
             if (this.checked) {
                 container.classList.add('border-indigo-500', 'bg-indigo-50/50');
                 container.classList.remove('border-gray-200');
                 checkIcon.style.transform = 'scale(1)';
             } else {
                 container.classList.remove('border-indigo-500', 'bg-indigo-50/50');
                 container.classList.add('border-gray-200');
                 checkIcon.style.transform = 'scale(0)';
             }
             
             updateSelectedCount();
         });
     });
     
     // Form submission
     editMode.addEventListener('submit', async function(e) {
         e.preventDefault();
         
         const submitBtn = this.querySelector('button[type="submit"]');
         submitBtn.disabled = true;
         
         try {
             const selectedSpecs = Array.from(
                 document.querySelectorAll('input[name="specializations[]"]:checked')
             ).map(input => input.value);
             
             if (selectedSpecs.length === 0) {
                 throw new Error('Veuillez sélectionner au moins une spécialisation');
             }
             
             // Show loading state
             submitBtn.innerHTML = `
                 <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                     <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                     <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                 </svg>
                 <span>Enregistrement...</span>
             `;
             
             const response = await fetch('/dashboard/profile/update-specializations', {
                 method: 'PUT',
                 headers: { 'Content-Type': 'application/json' },
                 body: JSON.stringify({ specializations: selectedSpecs })
             });
             
             if (!response.ok) {
                 throw new Error('Erreur lors de la mise à jour');
             }
             
             // Reload page to show updates
             window.location.reload();
             
         } catch (error) {
             // Show error message
             const errorDiv = document.createElement('div');
             errorDiv.className = 'p-4 mb-4 bg-red-50 text-red-600 rounded-lg';
             errorDiv.textContent = error.message;
             
             editMode.insertBefore(errorDiv, editMode.firstChild);
             
             // Remove error message after 3 seconds
             setTimeout(() => errorDiv.remove(), 3000);
             
             // Reset button state
             submitBtn.disabled = false;
             submitBtn.innerHTML = 'Enregistrer';
         }
     });
     
     // Event listeners
     editBtn.addEventListener('click', toggleEditMode);
     cancelBtn.addEventListener('click', () => {
         editMode.reset();
         toggleEditMode();
     });
 });
 </script>
 
 <style>
 /* Transitions */
 .spec-card {
     transition: all 0.2s ease-out;
 }
 
 .spec-card:hover {
     transform: translateY(-2px);
     box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);
 }
 
 /* Checkbox animations */
 .spec-option input:checked + div {
     animation: checkPulse 0.2s ease-out;
 }
 
 @keyframes checkPulse {
     0% { transform: scale(1); }
     50% { transform: scale(1.02); }
     100% { transform: scale(1); }
 }
 
 /* Loading animation */
 @keyframes spin {
     to { transform: rotate(360deg); }
 }
 
 .animate-spin {
     animation: spin 1s linear infinite;
 }
 </style>